<?xml version="1.0"?>
<doc>
    <assembly>
        <name>commercetools.NET</name>
    </assembly>
    <members>
        <member name="T:commercetools.Carts.ExternalLineItemTotalPrice">
            <summary>
            ExternalLineItemTotalPrice
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#externallineitemtotalprice"/>
        </member>
        <member name="M:commercetools.Carts.ExternalLineItemTotalPrice.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Carts.ExternalLineItemTotalPrice.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.AddCustomLineItemAction">
            <summary>
            Adds a CustomLineItem to the cart.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#add-customlineitem"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddCustomLineItemAction.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddCustomLineItemAction.Quantity">
            <summary>
            Quantity - Defaults to 1
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddCustomLineItemAction.Money">
            <summary>
            Money
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddCustomLineItemAction.Slug">
            <summary>
            Slug
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddCustomLineItemAction.TaxCategory">
            <summary>
            Reference to a TaxCategory - Required only for Platform TaxMode 
            </summary>
            <remarks>
            The given tax category will be used to select a tax rate when a cart has the tax mode Platform.
            </remarks>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddCustomLineItemAction.ExternalTaxRate">
            <summary>
            An external tax rate can be set if the cart has the External TaxMode.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddCustomLineItemAction.Custom">
            <summary>
            The custom fields.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.AddCustomLineItemAction.#ctor(commercetools.Common.LocalizedString,commercetools.Common.Money,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
            <param name="money">Money</param>
            <param name="slug">Slug</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.AddDiscountCodeAction">
            <summary>
            Adds a DiscountCode to the cart to enable the related CartDiscounts.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#add-discountcode"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddDiscountCodeAction.Code">
            <summary>
            The code of an existing DiscountCode.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.AddDiscountCodeAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="code">The code of an existing DiscountCode.</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.AddLineItemAction">
            <summary>
            Adds a product variant in the given quantity to the cart.
            </summary>
            <remarks>
            If the cart already contains the product variant for the given supply and distribution channel, then only quantity of the LineItem is increased.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#add-lineitem"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddLineItemAction.ProductId">
            <summary>
            Id of an existing Product.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddLineItemAction.VariantId">
            <summary>
            Id of an existing ProductVariant in the product.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddLineItemAction.Quantity">
            <summary>
            Number
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddLineItemAction.SupplyChannel">
            <summary>
            By providing supply channel information, you can unique identify inventory entries that should be reserved. Provided channel should have the role InventorySupply.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddLineItemAction.DistributionChannel">
            <summary>
            The channel is used to select a ProductPrice. Provided channel should have the role ProductDistribution.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddLineItemAction.ExternalTaxRate">
            <summary>
            An external tax rate can be set if the cart has the External TaxMode.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddLineItemAction.Custom">
            <summary>
            The custom fields.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.AddLineItemAction.#ctor(System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="productId">Id of an existing Product.</param>
            <param name="quantity">Number</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.AddPaymentAction">
            <summary>
            This action adds a payment to the PaymentInfo.
            </summary>
            <remarks>
            The payment must not be assigned to another Order or active Cart yet.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#add-payment"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.AddPaymentAction.Payment">
            <summary>
            Reference to a Payment.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.AddPaymentAction.#ctor(commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
            <param name="payment">Reference to a Payment.</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.ChangeCustomLineItemMoneyAction">
            <summary>
            Sets the money of the given CustomLineItem.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#change-customlineitem-money"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.ChangeCustomLineItemMoneyAction.CustomLineItemId">
            <summary>
            ID of an existing CustomLineItem in the cart.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.ChangeCustomLineItemMoneyAction.Money">
            <summary>
            The new money.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.ChangeCustomLineItemMoneyAction.#ctor(System.String,commercetools.Common.Money)">
            <summary>
            Constructor.
            </summary>
            <param name="lineItemId">ID of an existing CustomLineItem in the cart.</param>
            <param name="money">The new money.</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.ChangeCustomLineItemQuantityAction">
            <summary>
            Sets the quantity of the given CustomLineItem.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#change-customlineitem-quantity"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.ChangeCustomLineItemQuantityAction.CustomLineItemId">
            <summary>
            Id of an existing LineItem in the cart.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.ChangeCustomLineItemQuantityAction.Quantity">
            <summary>
            The new quantity being a value > 0.
            </summary>
            <remarks>
            In case the item should be removed from the cart at all, use remove CustomLineItem instead.
            </remarks>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.ChangeCustomLineItemQuantityAction.#ctor(System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="customLineItemId">Id of an existing LineItem in the cart</param>
            <param name="quantity">The new quantity being a value > 0.</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.ChangeLineItemQuantityAction">
            <summary>
            Sets the quantity of the given LineItem. 
            </summary>
            <remarks>
            If quantity is 0, line item is removed from the cart.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#change-lineitem-quantity"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.ChangeLineItemQuantityAction.LineItemId">
            <summary>
            Id of an existing LineItem in the cart.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.ChangeLineItemQuantityAction.Quantity">
            <summary>
            Number
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.ChangeLineItemQuantityAction.#ctor(System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="lineItemId">Id of an existing LineItem in the cart</param>
            <param name="quantity">Number</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.ChangeTaxModeAction">
            <summary>
            Changes the TaxMode of a cart.
            </summary>
            <remarks>
            When a tax mode is changed from External to Platform or Disabled, all previously set external tax rates will be removed. When changing the tax mode to Platform, line items, custom line items and shipping method require a tax category with a tax rate for the given shipping address.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#change-taxmode"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.ChangeTaxModeAction.TaxMode">
            <summary>
            TaxMode
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.ChangeTaxModeAction.#ctor(commercetools.Carts.TaxMode)">
            <summary>
            Constructor.
            </summary>
            <param name="taxMode">TaxMode</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.ChangeTaxRoundingModeAction">
            <summary>
            Changes the tax RoundingMode of a cart.
            </summary>
            <remarks>
            When changing the tax rounding mode, the taxes are recalculated.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#change-tax-roundingmode"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.ChangeTaxRoundingModeAction.TaxRoundingMode">
            <summary>
            RoundingMode
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.ChangeTaxRoundingModeAction.#ctor(commercetools.Carts.RoundingMode)">
            <summary>
            Constructor.
            </summary>
            <param name="taxRoundingMode">RoundingMode</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.RecalculateAction">
            <summary>
            Updates the tax rates and the prices and optionally the line item product data.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#recalculate"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.RecalculateAction.UpdateProductData">
            <summary>
            If set to true, the line item product data (name, variant and productType) will also be updated. If set to false, only the prices and tax rates will be updated.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.RecalculateAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.RemoveCustomLineItemAction">
            <summary>
            Removes the custom CustomLineItem from the cart.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#remove-customlineitem"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.RemoveCustomLineItemAction.CustomLineItemId">
            <summary>
            ID of an existing CustomLineItem in the cart.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.RemoveCustomLineItemAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="customLineItemId">ID of an existing CustomLineItem in the cart.</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.RemoveDiscountCodeAction">
            <summary>
            Removes a discount code from the cart.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#remove-discountcode"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.RemoveDiscountCodeAction.DiscountCode">
            <summary>
            Reference to a DiscountCode.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.RemoveDiscountCodeAction.#ctor(commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
            <param name="discountCode">Reference to a DiscountCode.</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.RemoveLineItemAction">
            <summary>
            Decreases the quantity of the given LineItem.
            </summary>
            <remarks>
            If after the update the quantity of the line item is not greater than 0 or the quantity is not specified, the line item is removed from the cart.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#remove-lineitem"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.RemoveLineItemAction.LineItemId">
            <summary>
            Id of an existing LineItem in the cart.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.RemoveLineItemAction.Quantity">
            <summary>
            Number
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.RemoveLineItemAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="lineItemId">Id of an existing LineItem in the cart</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.RemovePaymentAction">
            <summary>
            This action removes a payment from the PaymentInfo.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#add-lineitem"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.RemovePaymentAction.Payment">
            <summary>
            Reference to a Payment.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.RemovePaymentAction.#ctor(commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
            <param name="payment">Reference to a Payment.</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetBillingAddressAction">
            <summary>
            Sets the billing address of the cart. 
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-billing-address"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetBillingAddressAction.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetBillingAddressAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetCountryAction">
            <summary>
            Sets the country of the cart. When the country is set, the LineItem prices are updated.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-country"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCountryAction.Country">
            <summary>
            A two-digit country code as per ISO 3166-1 alpha-2.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetCountryAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetCustomerEmailAction">
            <summary>
            SetCustomerEmailAction.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-customer-email"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomerEmailAction.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetCustomerEmailAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetCustomerIdAction">
            <summary>
            Sets the customer ID of the cart.
            </summary>
            <remarks>
            When the customer ID is set, the LineItem prices are updated.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-customer-id"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomerIdAction.CustomerId">
            <summary>
            If set, a customer with the given ID must exist in the project.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetCustomerIdAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetCustomLineItemCustomFieldAction">
            <summary>
            This action sets, overwrites or removes any existing custom field for an existing CustomLineItem.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-customlineitem-customfield"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomLineItemCustomFieldAction.CustomLineItemId">
            <summary>
            Custom line item ID
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomLineItemCustomFieldAction.Name">
            <summary>
            Field name
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomLineItemCustomFieldAction.Value">
            <summary>
            Field value
            </summary>
            <remarks>
            If absent or null, this field is removed if it exists.
            </remarks>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetCustomLineItemCustomFieldAction.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="customLineItemId">Custom line item ID</param>
            <param name="name">Field name</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetCustomLineItemCustomTypeAction">
            <summary>
            This action sets, overwrites or removes the custom type and fields for an existing CustomLineItem.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-customlineitem-custom-type"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomLineItemCustomTypeAction.Type">
            <summary>
            ResourceIdentifier to a Type
            </summary>
            <remarks>
            If set, the custom type is set to this new value. If absent, the custom type and any existing CustomFields are removed at the same time.
            </remarks>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomLineItemCustomTypeAction.CustomLineItemId">
            <summary>
            Custom line item ID
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomLineItemCustomTypeAction.Fields">
            <summary>
            A valid JSON object, based on the FieldDefinitions of the Type 
            </summary>
            <remarks>
            If set, the custom fields are set to this new value.
            </remarks>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetCustomLineItemCustomTypeAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="customLineItemId">Custom line item ID</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetCustomLineItemTaxRateAction">
            <summary>
            A custom line item tax rate can be set if the cart has the External TaxMode.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-customlineitem-taxrate"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomLineItemTaxRateAction.CustomLineItemId">
            <summary>
            CustomLineItemId
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomLineItemTaxRateAction.ExternalTaxRate">
            <summary>
            An external tax rate can be set if the cart has the External TaxMode.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetCustomLineItemTaxRateAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="customLineItemId">CustomLineItemId</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetCustomShippingMethodAction">
            <summary>
            Sets a custom shipping method (independent of the ShippingMethods defined in the project). 
            </summary>
            <remarks>
            The custom shipping method can be unset with the setShippingMethod action without the shippingMethod. Prerequisite: The cart must contain a shipping address.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-custom-shippingmethod"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomShippingMethodAction.ShippingMethodName">
            <summary>
            Shipping method name
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomShippingMethodAction.ShippingRate">
            <summary>
            The shipping rate used to determine the price.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomShippingMethodAction.TaxCategory">
            <summary>
            The given tax category will be used to select a tax rate when a cart has the TaxMode Platform.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomShippingMethodAction.ExternalTaxRate">
            <summary>
            An external tax rate can be set if the cart has the External TaxMode.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetCustomShippingMethodAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="shippingMethodName">Shipping method name</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetCustomTypeAction">
            <summary>
            This action sets, overwrites or removes any existing custom type and fields for an existing cart.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-custom-type"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomTypeAction.Type">
            <summary>
            ResourceIdentifier to a Type
            </summary>
            <remarks>
            If set, the custom type is set to this new value. If absent, the custom type and any existing custom fields are removed.
            </remarks>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomTypeAction.Fields">
            <summary>
            A valid JSON object, based on the FieldDefinitions of the Type 
            </summary>
            <remarks>
            If set, the custom fields are set to this new value.
            </remarks>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetCustomTypeAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetLineItemCustomFieldAction">
            <summary>
            This action sets, overwrites or removes any existing custom field for an existing LineItem.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-lineitem-customfield"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetLineItemCustomFieldAction.LineItemId">
            <summary>
            Line item ID
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetLineItemCustomFieldAction.Name">
            <summary>
            Field name
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetLineItemCustomFieldAction.Value">
            <summary>
            Field value
            </summary>
            <remarks>
            If absent or null, this field is removed if it exists.
            </remarks>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetLineItemCustomFieldAction.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="lineItemId">Line item ID</param>
            <param name="name">Field name</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetLineItemCustomTypeAction">
            <summary>
            This action sets, overwrites or removes the custom type and fields for an existing LineItem.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-lineitem-custom-type"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetLineItemCustomTypeAction.Type">
            <summary>
            ResourceIdentifier to a Type
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetLineItemCustomTypeAction.LineItemId">
            <summary>
            Line item ID
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetLineItemCustomTypeAction.Fields">
            <summary>
            A valid JSON object, based on the FieldDefinitions of the Type 
            </summary>
            <remarks>
            If set, the custom fields are set to this new value.
            </remarks>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetLineItemCustomTypeAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="lineItemId">Line item ID</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetLineItemTaxRateAction">
            <summary>
            A line item tax rate can be set if the cart has the External TaxMode.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-lineitem-taxrate"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetLineItemTaxRateAction.LineItemId">
            <summary>
            Id of an existing LineItem.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetLineItemTaxRateAction.ExternalTaxRate">
            <summary>
            An external tax rate can be set if the cart has the External TaxMode.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetLineItemTaxRateAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="lineItemId">Id of an existing Product.</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetLineItemTotalPriceAction">
            <summary>
            Sets the totalPrice and price of the line item and changes the priceMode of the line item to ExternalTotal.
            </summary>
            <remarks>
             If the external total price of the line item was already set and the externalTotalPrice field of this update action is not given, the external price is unset and the line item price mode is set back to Platform. Although both price and totalPrice are set with this update action, only totalPrice will be used to calculate the total price of the cart.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-lineitem-totalprice"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetLineItemTotalPriceAction.LineItemId">
            <summary>
            Id of the LineItem.
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetLineItemTotalPriceAction.ExternalLineItemTotalPrice">
            <summary>
            ExternalLineItemTotalPrice
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetLineItemTotalPriceAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="lineItemId">Id of an existing Product.</param>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetLocaleAction">
            <summary>
            Sets the locale. Must be one of the languages supported for this Project.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-locale"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetLocaleAction.Locale">
            <summary>
            String conforming to IETF language tag.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetLocaleAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetShippingAddressAction">
            <summary>
            Sets the shipping address of the cart. 
            </summary>
            <remarks>
            Setting the shipping address also sets the TaxRate of the line items and calculates the TaxedPrice. If the address is not provided, the shipping address is unset, the taxedPrice is unset and the taxRates are unset in all line items.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-shipping-address"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetShippingAddressAction.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetShippingAddressAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetShippingMethodAction">
            <summary>
            Sets the ShippingMethod.
            </summary>
            <remarks>
            Prerequisite: The cart must contain a shipping address.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-shippingmethod"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetShippingMethodAction.ShippingMethod">
            <summary>
            Shipping method
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetShippingMethodAction.ExternalTaxRate">
            <summary>
            An external tax rate can be set if the cart has the External TaxMode.
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetShippingMethodAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetShippingMethodTaxRateAction">
            <summary>
            A shipping method tax rate can be set if the cart has the External TaxMode.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-shippingmethod-taxrate"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetShippingMethodTaxRateAction.ExternalTaxRate">
            <summary>
            ExternalTaxRate
            </summary>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetShippingMethodTaxRateAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Carts.UpdateActions.SetCustomFieldAction">
            <summary>
            This action sets, overwrites or removes any existing custom field for an existing cart.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#set-customfield"/>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomFieldAction.Name">
            <summary>
            Field name
            </summary>
        </member>
        <member name="P:commercetools.Carts.UpdateActions.SetCustomFieldAction.Value">
            <summary>
            Field value
            </summary>
            <remarks>
            If absent or null, this field is removed if it exists.
            </remarks>
        </member>
        <member name="M:commercetools.Carts.UpdateActions.SetCustomFieldAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Field name</param>
        </member>
        <member name="T:commercetools.Carts.Cart">
            <summary>
            A shopping cart holds product variants and can be ordered. Each cart either belongs to a registered customer or is an anonymous cart.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#cart"/>
        </member>
        <member name="P:commercetools.Carts.Cart.Id">
            <summary>
            The unique ID of the cart.
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.Version">
            <summary>
            The current version of the cart.
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.CreatedAt">
            <summary>
            Created At
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.LastModifiedAt">
            <summary>
            Last Modified At
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.CustomerId">
            <summary>
            Customer Id
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.CustomerEmail">
            <summary>
            Customer Email
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.AnonymousId">
            <summary>
            Identifies carts and orders belonging to an anonymous session (the customer has not signed up/in yet).
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.LineItems">
            <summary>
            List of LineItems
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.CustomLineItems">
            <summary>
            List of CustomLineItems
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.TotalPrice">
            <summary>
            The sum of all totalPrice fields of the lineItems and customLineItems, as well as the price field of shippingInfo (if it exists).
            </summary>
            <remarks>
            totalPrice may or may not include the taxes: it depends on the taxRate.includedInPrice property of each price.
            </remarks>
        </member>
        <member name="P:commercetools.Carts.Cart.TaxedPrice">
            <summary>
            Not set until the shipping address is set. Will be set automatically in the Platform TaxMode.
            </summary>
            <remarks>
            For the External tax mode it will be set as soon as the external tax rates for all line items, custom line items, and shipping in the cart are set.
            </remarks>
        </member>
        <member name="P:commercetools.Carts.Cart.CartState">
            <summary>
            Cart State
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.ShippingAddress">
            <summary>
            The shipping address is also used to determine tax rate of the line items.
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.BillingAddress">
            <summary>
            Billing Address
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.InventoryMode">
            <summary>
            Inventory Mode
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.TaxMode">
            <summary>
            Tax Mode
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.TaxRoundingMode">
            <summary>
            When calculating taxes for taxedPrice, the selected mode is used for rounding.
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.CustomerGroup">
            <summary>
            Reference to a CustomerGroup
            </summary>
            <remarks>
            Set automatically when the customer is set and the customer is a member of a customer group. Used for product variant price selection.
            </remarks>
        </member>
        <member name="P:commercetools.Carts.Cart.Country">
            <summary>
            A two-digit country code as per ISO 3166-1 alpha-2. Used for product variant price selection.
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.ShippingInfo">
            <summary>
            Set automatically once the ShippingMethod is set.
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.DiscountCodes">
            <summary>
            List of DiscountCodeInfo
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.Custom">
            <summary>
            The custom fields.
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.PaymentInfo">
            <summary>
            Payment Info
            </summary>
        </member>
        <member name="P:commercetools.Carts.Cart.Locale">
            <summary>
            String conforming to IETF language tag.
            </summary>
        </member>
        <member name="M:commercetools.Carts.Cart.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Carts.Cart.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Carts.Cart.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Carts.CartDraft">
            <summary>
            API representation for creating a new Cart.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#cartdraft"/>
        </member>
        <member name="P:commercetools.Carts.CartDraft.Currency">
            <summary>
            A three-digit currency code as per ISO 4217.
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.CustomerId">
            <summary>
            Id of an existing Customer.
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.CustomerEmail">
            <summary>
            Customer email
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.AnonymousId">
            <summary>
            Assigns the new cart to an anonymous session (the customer has not signed up/in yet).
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.Country">
            <summary>
            A two-digit country code as per ISO 3166-1 alpha-2.
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.InventoryMode">
            <summary>
            Default inventory mode is None.
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.TaxMode">
            <summary>
            The default tax mode is Platform.
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.TaxRoundingMode">
            <summary>
            The default tax rounding mode is HalfEven.
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.LineItems">
            <summary>
            List of LineItemDrafts
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.CustomLineItems">
            <summary>
            List of CustomLineItemDrafts
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.ShippingAddress">
            <summary>
            Shipping address
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.BillingAddress">
            <summary>
            Billing address
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.ShippingMethod">
            <summary>
            Reference to a ShippingMethod
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.ExternalTaxRateForShippingMethod">
            <summary>
            An external tax rate can be set for the shippingMethod if the cart has the External TaxMode.
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.Custom">
            <summary>
            The custom fields.
            </summary>
        </member>
        <member name="P:commercetools.Carts.CartDraft.Locale">
            <summary>
            Must be one of the languages supported for this project.
            </summary>
        </member>
        <member name="M:commercetools.Carts.CartDraft.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="currency">Currency</param>
        </member>
        <member name="T:commercetools.Carts.CartManager">
            <summary>
            Provides access to the functions in the Carts section of the API.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html"/>
        </member>
        <member name="M:commercetools.Carts.CartManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.Carts.CartManager.GetCartByIdAsync(System.String)">
            <summary>
            Gets a Cart by its ID.
            </summary>
            <param name="cartId">Cart ID</param>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#get-cart-by-id"/>
            <returns>Cart</returns>
        </member>
        <member name="M:commercetools.Carts.CartManager.GetCartByCustomerAsync(commercetools.Customers.Customer)">
            <summary>
            Retrieves the active cart of the customer that has been modified most recently.
            </summary>
            <param name="customer">Customer</param>
            <returns>Cart</returns>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#get-cart-by-customer-id"/>
        </member>
        <member name="M:commercetools.Carts.CartManager.GetCartByCustomerIdAsync(System.String)">
            <summary>
            Retrieves the active cart of the customer that has been modified most recently.
            </summary>
            <param name="customerId">Customer ID</param>
            <returns>Cart</returns>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#get-cart-by-customer-id"/>
        </member>
        <member name="M:commercetools.Carts.CartManager.QueryCartsAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Queries for Carts.
            </summary>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <returns>CartQueryResult</returns>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#query-carts"/>
        </member>
        <member name="M:commercetools.Carts.CartManager.CreateCartAsync(commercetools.Carts.CartDraft)">
            <summary>
            Creates a new Cart.
            </summary>
            <param name="cartDraft">CartDraft</param>
            <returns>Cart</returns>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#create-cart"/>
        </member>
        <member name="M:commercetools.Carts.CartManager.UpdateCartAsync(commercetools.Carts.Cart,commercetools.Common.UpdateAction)">
            <summary>
            Updates a cart.
            </summary>
            <param name="cart">Cart</param>
            <param name="action">The update action to be performed on the cart.</param>
            <returns>Cart</returns>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#update-cart"/>
        </member>
        <member name="M:commercetools.Carts.CartManager.UpdateCartAsync(commercetools.Carts.Cart,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a cart.
            </summary>
            <param name="cart">Cart</param>
            <param name="actions">The list of update actions to be performed on the cart.</param>
            <returns>Cart</returns>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#update-cart"/>
        </member>
        <member name="M:commercetools.Carts.CartManager.UpdateCartAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a cart.
            </summary>
            <param name="cartId">ID of the cart</param>
            <param name="version">The expected version of the cart on which the changes should be applied.</param>
            <param name="actions">The list of update actions to be performed on the cart.</param>
            <returns>Cart</returns>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#update-cart"/>
        </member>
        <member name="M:commercetools.Carts.CartManager.DeleteCartAsync(commercetools.Carts.Cart)">
            <summary>
            Removes a Cart. If it was assigned to a Customer, a new cart can be created for this customer.
            </summary>
            <param name="cart">Cart</param>
            <returns>Cart</returns>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#delete-cart"/>
        </member>
        <member name="M:commercetools.Carts.CartManager.DeleteCartAsync(System.String,System.Int32)">
            <summary>
            Removes a Cart. If it was assigned to a Customer, a new cart can be created for this customer.
            </summary>
            <param name="cartId">Cart ID</param>
            <param name="version">Cart version</param>
            <returns>Cart</returns>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#delete-cart"/>
        </member>
        <member name="T:commercetools.Carts.CartQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of Cart objects.
            </summary>
            <see href="https://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="P:commercetools.Carts.CartQueryResult.Results">
            <summary>
            Results
            </summary>
        </member>
        <member name="M:commercetools.Carts.CartQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Carts.CustomLineItem">
            <summary>
            A custom line item is a generic item that can be added to the cart but is not bound to a product. You can use it for discounts (negative money), vouchers, complex cart rules, additional services or fees. You control the lifecycle of this item.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#customlineitem"/>
        </member>
        <member name="M:commercetools.Carts.CustomLineItem.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Carts.CustomLineItem.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Carts.CustomLineItem.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Carts.CustomLineItemDraft">
            <summary>
            API representation for creating a new CustomLineItem.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#customlineitemdraft"/>
        </member>
        <member name="M:commercetools.Carts.CustomLineItemDraft.#ctor(commercetools.Common.LocalizedString)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Carts.DiscountCodeInfo">
            <summary>
            DiscountCodeInfo
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#discountcodeinfo"/>
        </member>
        <member name="M:commercetools.Carts.DiscountCodeInfo.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Carts.DiscountedLineItemPortion">
            <summary>
            DiscountedLineItemPortion
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#discountedlineitemportion"/>
        </member>
        <member name="M:commercetools.Carts.DiscountedLineItemPortion.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Carts.DiscountedLineItemPrice">
            <summary>
            DiscountedLineItemPrice
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#discountedlineitemprice"/>
        </member>
        <member name="M:commercetools.Carts.DiscountedLineItemPrice.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Carts.DiscountedLineItemPriceForQuantity">
            <summary>
            DiscountedLineItemPriceForQuantity
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#discountedlineitempriceforquantity"/>
        </member>
        <member name="M:commercetools.Carts.DiscountedLineItemPriceForQuantity.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Carts.CartState">
            <summary>
            CartState enumeration.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#cartstate"/>
        </member>
        <member name="T:commercetools.Carts.DiscountCodeState">
            <summary>
            DiscountCodeState enumeration.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#discountcodestate"/>
        </member>
        <member name="T:commercetools.Carts.InventoryMode">
            <summary>
            InventoryMode enumeration.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#inventorymode"/>
        </member>
        <member name="T:commercetools.Carts.LineItemPriceMode">
            <summary>
            LineItemPriceMode enumeration.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#lineitempricemode"/>
        </member>
        <member name="T:commercetools.Carts.RoundingMode">
            <summary>
            A rounding mode specifies how the platform should round monetary values.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#roundingmode"/>
        </member>
        <member name="T:commercetools.Carts.TaxMode">
            <summary>
            TaxMode enumeration.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#taxmode"/>
        </member>
        <member name="T:commercetools.Carts.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.Carts.Extensions.Carts(commercetools.Common.Client)">
            <summary>
            Creates an instance of the CartManager.
            </summary>
            <returns>CartManager</returns>
        </member>
        <member name="T:commercetools.Carts.ExternalTaxRateDraft">
            <summary>
            ExternalTaxRateDraft
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#externaltaxratedraft"/>
        </member>
        <member name="M:commercetools.Carts.ExternalTaxRateDraft.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Carts.LineItem">
            <summary>
            A line item is a snapshot of a product variant at the time it was added to the cart.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#lineitem"/>
        </member>
        <member name="M:commercetools.Carts.LineItem.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Carts.LineItem.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Carts.LineItem.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Carts.LineItemDraft">
            <summary>
            API representation for creating a new LineItem.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#lineitemdraft"/>
        </member>
        <member name="P:commercetools.Carts.LineItemDraft.ProductId">
            <summary>
            Id of an existing Product.
            </summary>
        </member>
        <member name="P:commercetools.Carts.LineItemDraft.VariantId">
            <summary>
            Id of an existing ProductVariant in the product.
            </summary>
        </member>
        <member name="P:commercetools.Carts.LineItemDraft.Quantity">
            <summary>
            Quantity - Defaults to 1
            </summary>
        </member>
        <member name="P:commercetools.Carts.LineItemDraft.SupplyChannel">
            <summary>
            Reference to a Channel
            </summary>
            <remarks>
            By providing supply channel information, you can unique identify inventory entries that should be reserved. Provided channel should have the role InventorySupply.
            </remarks>
        </member>
        <member name="P:commercetools.Carts.LineItemDraft.DistributionChannel">
            <summary>
            Reference to a Channel
            </summary>
            <remarks>
            The channel is used to select a ProductPrice. Provided channel should have the role ProductDistribution.
            </remarks>
        </member>
        <member name="P:commercetools.Carts.LineItemDraft.ExternalTaxRate">
            <summary>
            An external tax rate can be set if the cart has the External TaxMode.
            </summary>
        </member>
        <member name="P:commercetools.Carts.LineItemDraft.Custom">
            <summary>
            The custom fields.
            </summary>
        </member>
        <member name="M:commercetools.Carts.LineItemDraft.#ctor(System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="productId">Id of an existing Product.</param>
            <param name="variantId">Id of an existing ProductVariant in the product.</param>
        </member>
        <member name="T:commercetools.Carts.ShippingInfo">
            <summary>
            ShippingInfo
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#shippinginfo"/>
        </member>
        <member name="M:commercetools.Carts.ShippingInfo.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Carts.TaxedItemPrice">
            <summary>
            TaxedItemPrice
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#taxeditemprice"/>
        </member>
        <member name="M:commercetools.Carts.TaxedItemPrice.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Carts.TaxPortion">
            <summary>
            Represents the portions that sum up to the totalGross field of a TaxedPrice.
            </summary>
            <remarks>
            The portions are calculated from the TaxRates. If a tax rate has SubRates, they are used and can be identified by name. Tax portions from line items that have the same rate and name will be accumulated to the same tax portion.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#taxportion"/>
        </member>
        <member name="M:commercetools.Carts.TaxPortion.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Carts.TaxedPrice">
            <summary>
            TaxedPrice
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-carts.html#taxedprice"/>
        </member>
        <member name="M:commercetools.Carts.TaxedPrice.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Categories.CategoryQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of Category objects.
            </summary>
            <see href="https://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="P:commercetools.Categories.CategoryQueryResult.Results">
            <summary>
            Results
            </summary>
        </member>
        <member name="M:commercetools.Categories.CategoryQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Categories.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.Categories.Extensions.Categories(commercetools.Common.Client)">
            <summary>
            Creates an instance of the CategoryManager.
            </summary>
            <returns>CategoryManager</returns>
        </member>
        <member name="T:commercetools.Categories.UpdateActions.ChangeNameAction">
            <summary>
            Change name 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#change-name"/>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.ChangeNameAction.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="M:commercetools.Categories.UpdateActions.ChangeNameAction.#ctor(commercetools.Common.LocalizedString)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="T:commercetools.Categories.UpdateActions.ChangeOrderHintAction">
            <summary>
            ChangeOrderHintAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#change-orderhint"/>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.ChangeOrderHintAction.OrderHint">
            <summary>
            Order Hint
            </summary>
        </member>
        <member name="M:commercetools.Categories.UpdateActions.ChangeOrderHintAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="orderHint">Order Hint</param>
        </member>
        <member name="T:commercetools.Categories.UpdateActions.ChangeParentAction">
            <summary>
            Changing parents should not be done concurrently. Concurrent changes of parent categories might currently lead to corrupted ancestor lists (paths).
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#change-parent"/>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.ChangeParentAction.Parent">
            <summary>
            Reference to a category
            </summary>
        </member>
        <member name="M:commercetools.Categories.UpdateActions.ChangeParentAction.#ctor(commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
            <param name="parent">Reference to a category</param>
        </member>
        <member name="T:commercetools.Categories.UpdateActions.ChangeSlugAction">
            <summary>
            Change name 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#change-name"/>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.ChangeSlugAction.Slug">
            <summary>
            Slug
            </summary>
        </member>
        <member name="M:commercetools.Categories.UpdateActions.ChangeSlugAction.#ctor(commercetools.Common.LocalizedString)">
            <summary>
            Constructor.
            </summary>
            <param name="slug">Slug</param>
        </member>
        <member name="T:commercetools.Categories.UpdateActions.SetCustomFieldAction">
            <summary>
            SetCustomFieldAction 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#set-customfield"/>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.SetCustomFieldAction.Name">
            <summary>
            Field name
            </summary>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.SetCustomFieldAction.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:commercetools.Categories.UpdateActions.SetCustomFieldAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Field name</param>
        </member>
        <member name="T:commercetools.Categories.UpdateActions.SetCustomTypeAction">
            <summary>
            This action sets or removes the custom type for an existing category.
            </summary>
            <remarks>
            This action overwrites any existing custom type and fields.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#set-custom-type"/>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.SetCustomTypeAction.Type">
            <summary>
            ResourceIdentifier to a Type
            </summary>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.SetCustomTypeAction.Fields">
            <summary>
            A valid JSON object, based on the FieldDefinitions of the Type.
            </summary>
        </member>
        <member name="M:commercetools.Categories.UpdateActions.SetCustomTypeAction.#ctor(commercetools.Common.LocalizedString)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Categories.UpdateActions.SetDescriptionAction">
            <summary>
            Set description
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#set-description"/>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.SetDescriptionAction.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="M:commercetools.Categories.UpdateActions.SetDescriptionAction.#ctor(commercetools.Common.LocalizedString)">
            <summary>
            Constructor.
            </summary>
            <param name="description">Description</param>
        </member>
        <member name="T:commercetools.Categories.UpdateActions.SetExternalIdAction">
            <summary>
            Sets a new ID which can be used as additional identifier for external Systems like CRM or ERP.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#change-name"/>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.SetExternalIdAction.ExternalId">
            <summary>
            External ID
            </summary>
        </member>
        <member name="M:commercetools.Categories.UpdateActions.SetExternalIdAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Categories.UpdateActions.SetMetaDescriptionAction">
            <summary>
            SetMetaDescriptionAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#set-meta-description"/>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.SetMetaDescriptionAction.MetaDescription">
            <summary>
            Meta Description
            </summary>
        </member>
        <member name="M:commercetools.Categories.UpdateActions.SetMetaDescriptionAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Categories.UpdateActions.SetMetaKeywordsAction">
            <summary>
            SetMetaKeywordsAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#set-meta-keywords"/>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.SetMetaKeywordsAction.MetaKeywords">
            <summary>
            Meta Keywords
            </summary>
        </member>
        <member name="M:commercetools.Categories.UpdateActions.SetMetaKeywordsAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Categories.UpdateActions.SetMetaTitleAction">
            <summary>
            SetMetaTitleAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#set-meta-title"/>
        </member>
        <member name="P:commercetools.Categories.UpdateActions.SetMetaTitleAction.MetaTitle">
            <summary>
            Meta Title
            </summary>
        </member>
        <member name="M:commercetools.Categories.UpdateActions.SetMetaTitleAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Categories.Category">
            <summary>
            Categories are used to organize products in a hierarchical structure.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#category"/>
        </member>
        <member name="M:commercetools.Categories.Category.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Categories.Category.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Categories.Category.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Categories.CategoryDraft">
            <summary>
            API representation for creating a new category.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#categorydraft"/>
        </member>
        <member name="P:commercetools.Categories.CategoryDraft.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:commercetools.Categories.CategoryDraft.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:commercetools.Categories.CategoryDraft.Parent">
            <summary>
            Reference to a Category that is the parent of this category in the category tree.
            </summary>
        </member>
        <member name="P:commercetools.Categories.CategoryDraft.Slug">
            <summary>
            Human-readable identifier usually used as deep-link URL to the related category.
            </summary>
            <remarks>
            Allowed are alphabetic, numeric, underscore (_) and hyphen (-) characters. Maximum size is 256. Must be unique across a project! The same category can have the same slug for different languages.
            </remarks>
        </member>
        <member name="P:commercetools.Categories.CategoryDraft.OrderHint">
            <summary>
            An attribute as base for a custom category order in one level.
            </summary>
        </member>
        <member name="P:commercetools.Categories.CategoryDraft.ExternalId">
            <summary>
            External Id
            </summary>
        </member>
        <member name="P:commercetools.Categories.CategoryDraft.MetaTitle">
            <summary>
            Meta title
            </summary>
        </member>
        <member name="P:commercetools.Categories.CategoryDraft.MetaDescription">
            <summary>
            Meta description
            </summary>
        </member>
        <member name="P:commercetools.Categories.CategoryDraft.MetaKeywords">
            <summary>
            Meta keywords
            </summary>
        </member>
        <member name="P:commercetools.Categories.CategoryDraft.Custom">
            <summary>
            The custom fields.
            </summary>
        </member>
        <member name="P:commercetools.Categories.CategoryDraft.Assets">
            <summary>
            List of AssetDrafts
            </summary>
        </member>
        <member name="M:commercetools.Categories.CategoryDraft.#ctor(commercetools.Common.LocalizedString,commercetools.Common.LocalizedString)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
            <param name="slug">Human-readable identifier usually used as deep-link URL to the related category.</param>
        </member>
        <member name="T:commercetools.Categories.CategoryManager">
            <summary>
            Provides access to the functions in the Categories section of the API.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html"/>
        </member>
        <member name="M:commercetools.Categories.CategoryManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.Categories.CategoryManager.GetCategoryByIdAsync(System.String)">
            <summary>
            Gets a category by its ID.
            </summary>
            <param name="categoryId">Category ID</param>
            <returns>Category</returns>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#get-category-by-id"/>
        </member>
        <member name="M:commercetools.Categories.CategoryManager.QueryCategoriesAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Queries categories.
            </summary>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <returns>CategoryQueryResult</returns>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#query-categories"/>
        </member>
        <member name="M:commercetools.Categories.CategoryManager.CreateCategoryAsync(commercetools.Categories.CategoryDraft)">
            <summary>
            Creates a new category.
            </summary>
            <param name="categoryDraft">CategoryDraft object</param>
            <returns>Category</returns>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#create-a-category"/>
        </member>
        <member name="M:commercetools.Categories.CategoryManager.UpdateCategoryAsync(commercetools.Categories.Category,commercetools.Common.UpdateAction)">
            <summary>
            Updates a category.
            </summary>
            <param name="category">Category</param>
            <param name="action">The update action to be performed on the category.</param>
            <returns>Category</returns>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#update-category"/>
        </member>
        <member name="M:commercetools.Categories.CategoryManager.UpdateCategoryAsync(commercetools.Categories.Category,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a category.
            </summary>
            <param name="category">Category</param>
            <param name="actions">The list of update actions to be performed on the category.</param>
            <returns>Category</returns>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#update-category"/>
        </member>
        <member name="M:commercetools.Categories.CategoryManager.UpdateCategoryAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a category.
            </summary>
            <param name="categoryId">ID of the category</param>
            <param name="version">The expected version of the category on which the changes should be applied.</param>
            <param name="actions">The list of update actions to be performed on
            the category.</param>
            <returns>Category</returns>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#update-category"/>
        </member>
        <member name="M:commercetools.Categories.CategoryManager.DeleteCategoryAsync(commercetools.Categories.Category)">
            <summary>
            Deletes a category.
            </summary>
            <param name="category">Category</param>
            <returns>Category</returns>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#delete-category"/>
        </member>
        <member name="M:commercetools.Categories.CategoryManager.DeleteCategoryAsync(System.String,System.Int32)">
            <summary>
            Deletes a category.
            </summary>
            <param name="categoryId">Caregory ID</param>
            <param name="version">Caregory version</param>
            <returns>Category</returns>
            <see href="http://dev.commercetools.com/http-api-projects-categories.html#delete-category"/>
        </member>
        <member name="T:commercetools.Common.Address">
            <summary>
            An Address is a JSON string representation of a postal address.
            </summary>
            <see href="http://dev.commercetools.com/http-api-types.html#address"/>
        </member>
        <member name="M:commercetools.Common.Address.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Common.Address.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Common.Address.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Common.Address.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Common.ArraySource">
            <summary>
            An AssetSource is a representation of an Asset in a specific format, e.g. a video in a certain encoding, or an image in a certain resolution.
            </summary>
            <see href="http://dev.commercetools.com/http-api-types.html#assetsource"/>
        </member>
        <member name="M:commercetools.Common.ArraySource.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Common.ArraySource.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Common.ArraySource.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Common.ArraySource.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Common.Asset">
            <summary>
            An Asset can be used to represent media assets, such as images, videos or PDFs.
            </summary>
            <see href="http://dev.commercetools.com/http-api-types.html#asset"/>
        </member>
        <member name="M:commercetools.Common.Asset.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Common.Asset.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Common.Asset.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Common.AssetDimensions">
            <summary>
            The width and height of the asset source.
            </summary>
            <see href="http://dev.commercetools.com/http-api-types.html#assetdimensions"/>
        </member>
        <member name="M:commercetools.Common.AssetDimensions.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Common.AssetDimensions.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Common.AssetDimensions.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Common.AssetDimensions.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Common.AssetDraft">
            <summary>
            The representation to be sent to the server when creating a new asset.
            </summary>
            <see href="http://dev.commercetools.com/http-api-types.html#assetdraft"/>
        </member>
        <member name="M:commercetools.Common.AssetDraft.#ctor(System.Collections.Generic.List{commercetools.Common.ArraySource})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Common.AssetSource">
            <summary>
            An AssetSource is a representation of an Asset in a specific format, e.g. a video in a certain encoding, or an image in a certain resolution.
            </summary>
            <see href="http://dev.commercetools.com/http-api-types.html#assetsource"/>
        </member>
        <member name="M:commercetools.Common.AssetSource.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Common.ClientLoggingHandler">
            <summary>
            Logging handler for the Client methods.
            </summary>
        </member>
        <member name="M:commercetools.Common.ClientLoggingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructor
            </summary>
            <param name="innerHandler"></param>
        </member>
        <member name="M:commercetools.Common.ClientLoggingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Logs the request and response.
            </summary>
            <param name="request">HttpRequestMessage</param>
            <param name="cancellationToken">CancellationToken</param>
            <returns>HttpResponseMessage</returns>
        </member>
        <member name="T:commercetools.Common.Configuration">
            <summary>
            A set of configuration variables needed for making requests with the client.
            </summary>
        </member>
        <member name="M:commercetools.Common.Configuration.#ctor(System.String,System.String,System.String,System.String,System.String,commercetools.Common.ProjectScope)">
            <summary>
            Constructor
            </summary>
            <param name="oAuthUrl"></param>
            <param name="apiUrl"></param>
            <param name="projectKey"></param>
            <param name="clientID"></param>
            <param name="clientSecret"></param>
            <param name="scope"></param>
        </member>
        <member name="T:commercetools.Common.UpdateActions.GenericAction">
            <summary>
            A generic update action class used for actions that have not yet been implemented.
            </summary>
        </member>
        <member name="P:commercetools.Common.UpdateActions.GenericAction.Properties">
            <summary>
            List of properties.
            </summary>
        </member>
        <member name="M:commercetools.Common.UpdateActions.GenericAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="action">Action name</param>
        </member>
        <member name="M:commercetools.Common.UpdateActions.GenericAction.SetProperty(System.String,System.Object)">
            <summary>
            Sets a property.
            </summary>
            <param name="propertyName">Property name</param>
            <param name="value">Value</param>
        </member>
        <member name="M:commercetools.Common.UpdateActions.GenericAction.GetProperty(System.String)">
            <summary>
            Gets a property.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>JToken, or null if not set</returns>
        </member>
        <member name="M:commercetools.Common.UpdateActions.GenericAction.IsEmpty">
            <summary>
            Checks if there are any values in this instance.
            </summary>
            <returns>True if there are values, false otherwise</returns>
        </member>
        <member name="T:commercetools.Common.PagedQueryResult">
            <summary>
            For query responses of requests supporting paging via limit and offset.
            </summary>
            <see href="https://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="P:commercetools.Common.PagedQueryResult.Offset">
            <summary>
            The offset supplied by the client or the server default. It is the number of elements skipped, not a page number.
            </summary>
        </member>
        <member name="P:commercetools.Common.PagedQueryResult.Count">
            <summary>
            The actual number of results returned.
            </summary>
        </member>
        <member name="P:commercetools.Common.PagedQueryResult.Total">
            <summary>
            The total number of results matching the query.
            </summary>
        </member>
        <member name="M:commercetools.Common.PagedQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Common.Response`1">
            <summary>
            Container for all API responses.
            </summary>
            <typeparam name="T">Type</typeparam>
        </member>
        <member name="P:commercetools.Common.Response`1.Success">
            <summary>
            Whether or not the request was successful.
            </summary>
            <remarks>
            Only responses with a 200 status code are considered successful.
            </remarks>
        </member>
        <member name="P:commercetools.Common.Response`1.Result">
            <summary>
            Result object. Only set when the request was successful.
            </summary>
        </member>
        <member name="P:commercetools.Common.Response`1.StatusCode">
            <summary>
            HTTP status code
            </summary>
        </member>
        <member name="P:commercetools.Common.Response`1.ReasonPhrase">
            <summary>
            Reason Phrase
            </summary>
        </member>
        <member name="P:commercetools.Common.Response`1.Errors">
            <summary>
            A list of error messages that were returned. Only set if the request was not successful.
            </summary>
        </member>
        <member name="M:commercetools.Common.Response`1.#ctor">
            <summary>
            Constructor;
            </summary>
        </member>
        <member name="T:commercetools.Common.ErrorMessage">
            <summary>
            A single error message returned by the API.
            </summary>
        </member>
        <member name="P:commercetools.Common.ErrorMessage.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:commercetools.Common.ErrorMessage.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="M:commercetools.Common.ErrorMessage.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Common.ErrorMessage.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Common.UpdateAction">
            <summary>
            UpdateAction
            </summary>
        </member>
        <member name="M:commercetools.Common.UpdateAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Common.Converters.GenericActionConverter">
            <summary>
            Custom converter for the GenericAction class.
            </summary>
        </member>
        <member name="P:commercetools.Common.Converters.GenericActionConverter.CanRead">
            <summary>
            CanRead
            </summary>
        </member>
        <member name="M:commercetools.Common.Converters.GenericActionConverter.CanConvert(System.Type)">
            <summary>
            CanConvert
            </summary>
            <param name="objectType">Object type</param>
            <returns>True if the type is GenericAction, false otherwise</returns>
        </member>
        <member name="M:commercetools.Common.Converters.GenericActionConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            ReadJson (not implemented)
            </summary>
            <param name="reader">JsonReader</param>
            <param name="objectType">Object type</param>
            <param name="existingValue">Existing value</param>
            <param name="serializer">Serializer</param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Common.Converters.GenericActionConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            WriteJson
            </summary>
            <param name="writer">JsonWriter</param>
            <param name="value">Value</param>
            <param name="serializer">JsonSerializer</param>
        </member>
        <member name="T:commercetools.Common.Converters.LocalizedStringConverter">
            <summary>
            Custom converter for the LocalizedString class.
            </summary>
        </member>
        <member name="M:commercetools.Common.Converters.LocalizedStringConverter.CanConvert(System.Type)">
            <summary>
            CanConvert
            </summary>
            <param name="objectType">Object type</param>
            <returns>True if the type is LocalizedString, false otherwise</returns>
        </member>
        <member name="M:commercetools.Common.Converters.LocalizedStringConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            ReadJson
            </summary>
            <param name="reader">JsonReader</param>
            <param name="objectType">Object type</param>
            <param name="existingValue">Existing value</param>
            <param name="serializer">Serializer</param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Common.Converters.LocalizedStringConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            WriteJson
            </summary>
            <param name="writer">JsonWriter</param>
            <param name="value">Value</param>
            <param name="serializer">JsonSerializer</param>
        </member>
        <member name="T:commercetools.Common.LocalizedEnumValue">
            <summary>
            LocalizedEnumValue
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#localizedenumvalue"/>
        </member>
        <member name="M:commercetools.Common.LocalizedEnumValue.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Common.LocalizedEnumValue.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Common.PlainEnumValue">
            <summary>
            PlainEnumValue
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#plainenumvalue"/>
        </member>
        <member name="M:commercetools.Common.PlainEnumValue.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Common.PlainEnumValue.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Common.Token">
            <summary>
            Represents a response from an authorization request using the client credentials flow.
            </summary>
            <see href="http://dev.commercetools.com/http-api-authorization.html#client-credentials-flow"/>
        </member>
        <member name="M:commercetools.Common.Token.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Common.Token.IsExpired">
            <summary>
            Checks the expiry date against the current time to see if the token has expired.
            </summary>
        </member>
        <member name="T:commercetools.Common.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.Common.Extensions.ToEnumMemberString(System.Enum)">
            <summary>
            Allows easy access to the EnumMember attribute.
            </summary>
            <param name="val">Enum</param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Common.Extensions.ToJsonString(System.Object)">
            <summary>
            Gets the JSON representation for an object.
            </summary>
            <param name="val">Object</param>
            <returns>JSON string</returns>
        </member>
        <member name="M:commercetools.Common.Extensions.ToQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets a query string from a NameValueCollection, with the values 
            properly encoded.
            </summary>
            <param name="val">Values</param>
            <returns>A query string, including the ?</returns>
        </member>
        <member name="T:commercetools.Common.Helper">
            <summary>
            A collection of static methods for common tasks.
            </summary>
        </member>
        <member name="M:commercetools.Common.Helper.TryGetEnumByEnumMemberAttribute``1(System.String,``0@)">
            <summary>
            Attempts to get an enum by the value of its EnumMember attribute.
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="value">Value</param>
            <param name="t"></param>
            <returns>Enum with the matching EnumMember, or the default value for T if not found</returns>
        </member>
        <member name="T:commercetools.Common.Helper.ObjectActivator`1">
            <summary>
            Object activaator delegate
            </summary>
            <typeparam name="T"></typeparam>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Common.Helper.GetActivator``1(System.Reflection.ConstructorInfo)">
            <summary>
            Object activator. Offers significantly improved performance over Activator.CreateInstance.
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="constructor">Constructor to use</param>
            <returns>ObjectActivator</returns>
        </member>
        <member name="M:commercetools.Common.Helper.GetConstructorWithDataParameter(System.Type)">
            <summary>
            Gets the constructor for a type where there is a parameter called 'data' of type 'object'.
            </summary>
            <param name="type">Type</param>
            <returns>ConstructorInfo object, or null if not found</returns>
        </member>
        <member name="M:commercetools.Common.Helper.GetListFromJsonArray``1(Newtonsoft.Json.Linq.JArray)">
            <summary>
            Gets a list from an array of JSON objects.
            </summary>
            <remarks>
            For instances of T to be created where T is not a primitive type (or a DateTime, or a decimal, or a string), T must have a constructor that accepts only one parameter: "data" of type System.Object
            </remarks>
            <typeparam name="T">Type</typeparam>
            <param name="jArray">Array of JSON objects</param>
            <returns>List of T, or null</returns>
        </member>
        <member name="M:commercetools.Common.Helper.GetStringListFromJsonArray(Newtonsoft.Json.Linq.JArray)">
            <summary>
            Gets a string list from an array of JValues.
            </summary>
            <param name="jArray">Array</param>
            <returns>List of strings</returns>
        </member>
        <member name="M:commercetools.Common.Helper.UrlEncode(System.String)">
            <summary>
            Returns a properly encoded string for use in client requests.
            </summary>
            <param name="str">String to encode</param>
            <returns>URL encoded string</returns>
        </member>
        <member name="T:commercetools.Common.Money">
            <summary>
            Money
            </summary>
            <see href="http://dev.commercetools.com/http-api-types.html#money"/>
        </member>
        <member name="M:commercetools.Common.Money.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Common.Money.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Common.Logger">
            <summary>
            A simple log module using log4net.
            </summary>
        </member>
        <member name="P:commercetools.Common.Logger.Log">
            <summary>
            ILog
            </summary>
        </member>
        <member name="M:commercetools.Common.Logger.LogInfo(System.String)">
            <summary>
            Logs information
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:commercetools.Common.Logger.LogWarning(System.String)">
            <summary>
            Logs a warning
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:commercetools.Common.Logger.LogError(System.String)">
            <summary>
            Logs an error message
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="T:commercetools.Common.Client">
            <summary>
            A client for executing requests against the commercetools web service.
            </summary>
        </member>
        <member name="P:commercetools.Common.Client.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="P:commercetools.Common.Client.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:commercetools.Common.Client.UserAgent">
            <summary>
            The identifiying user agent that is included in all API requests.
            </summary>
        </member>
        <member name="M:commercetools.Common.Client.#ctor(commercetools.Common.Configuration)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:commercetools.Common.Client.GetAsync``1(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Executes a GET request.
            </summary>
            <param name="endpoint">API endpoint, excluding the project key</param>
            <param name="values">Values</param>
            <returns>JSON object</returns>
        </member>
        <member name="M:commercetools.Common.Client.PostAsync``1(System.String,System.String)">
            <summary>
            Executes a POST request.
            </summary>
            <param name="endpoint"></param>
            <param name="payload">Body of the request</param>
            <returns>JSON object</returns>
        </member>
        <member name="M:commercetools.Common.Client.DeleteAsync``1(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Executes a DELETE request.
            </summary>
            <param name="endpoint">API endpoint, excluding the project key</param>
            <param name="values">Values</param>
            <returns>JSON object</returns>
        </member>
        <member name="M:commercetools.Common.Client.EnsureToken">
            <summary>
            Ensures that the token for this instance has been retrieved and that it has not expired.
            </summary>
        </member>
        <member name="M:commercetools.Common.Client.GetTokenAsync">
            <summary>
            Retrieves a token from the authorization API using the client credentials flow.
            </summary>
            <returns>Token</returns>
            <see href="http://dev.commercetools.com/http-api-authorization.html#authorization-flows"/>
        </member>
        <member name="M:commercetools.Common.Client.RefreshTokenAsync(System.String)">
            <summary>
            Refreshes a token from the authorization API using the refresh token flow.
            </summary>
            <param name="refreshToken">Refresh token value from the current token</param>
            <returns>Token</returns>
            <see href="http://dev.commercetools.com/http-api-authorization.html#authorization-flows"/>
        </member>
        <member name="M:commercetools.Common.Client.GetResponse``1(System.Net.Http.HttpResponseMessage)">
            <summary>
            Gets a response object from the API response.
            </summary>
            <typeparam name="T">Type of result</typeparam>
            <param name="httpResponseMessage">HttpResponseMessage</param>
            <returns>Response</returns>
        </member>
        <member name="T:commercetools.Common.ProjectScope">
            <summary>
            List of project scopes used for access tokens.
            </summary>
            <remarks>
            The actual value used for API requests is stored in the EnumMember attribute.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-authorization.html#scopes"/>
        </member>
        <member name="T:commercetools.Common.ReferenceExpansion">
            <summary>
            List of reference expansions.
            </summary>
            <see href="http://dev.commercetools.com/http-api.html#reference-expansion"/>
        </member>
        <member name="T:commercetools.Common.ReferenceType">
            <summary>
            List of reference types.
            </summary>
            <remarks>
            The actual value used for API requests is stored in the Description attribute.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-types.html#reference-types"/>
        </member>
        <member name="T:commercetools.Common.LocalizedString">
            <summary>
            A localized string is a JSON object where the keys are of IETF language tag, and the values the corresponding strings used for that language.
            </summary>
            <see href="http://dev.commercetools.com/http-api-types.html#localizedstring"/>
        </member>
        <member name="M:commercetools.Common.LocalizedString.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Common.LocalizedString.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Common.LocalizedString.SetValue(System.String,System.String)">
            <summary>
            Sets a value for a particular language.
            </summary>
            <remarks>If a previous value has been set for the language, it will be overwritten</remarks>
            <param name="language">Language</param>
            <param name="value">Value</param>
        </member>
        <member name="M:commercetools.Common.LocalizedString.GetValue(System.String)">
            <summary>
            Gets the value for a language.
            </summary>
            <param name="language">Language</param>
            <returns>Value, or an empty string if not set</returns>
        </member>
        <member name="M:commercetools.Common.LocalizedString.IsEmpty">
            <summary>
            Checks if there are any values in this instance.
            </summary>
            <returns>True if there are values, false otherwise</returns>
        </member>
        <member name="T:commercetools.Common.Reference">
            <summary>
            A JSON object representing a (loose) reference to another resource on the commercetools platform.
            </summary>
            <see href="http://dev.commercetools.com/http-api-types.html#reference"/>
        </member>
        <member name="M:commercetools.Common.Reference.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Common.Reference.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Common.ResourceIdentifier">
            <summary>
            A reference to a resource can be created by providing the ID of the resource.
            </summary>
            <remarks>Some resources also use the key as a unique identifier and a reference can be created by providing the key instead of the ID. In this case, the server will find the resource with the given key and use the id of the found resource to create a reference.</remarks>
            <see href="http://dev.commercetools.com/http-api-types.html#resourceidentifier"/>
        </member>
        <member name="M:commercetools.Common.ResourceIdentifier.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Common.ResourceIdentifier.#ctor(System.Object)">
            <summary>
            Creates an FieldType using JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Common.ResourceIdentifier.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Common.ResourceIdentifier.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Customers.Customer">
            <summary>
            A customer is a person purchasing products. Carts, Orders and Reviews can be associated to a customer. 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#customer"/>
        </member>
        <member name="M:commercetools.Customers.Customer.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Customers.Customer.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Customers.Customer.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Customers.CustomerDraft">
            <summary>
            API representation for creating a new Customer.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#customerdraft"/>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.CustomerNumber">
            <summary>
            String that uniquely identifies a customer.
            </summary>
            <remarks>
            It can be used to create more human-readable (in contrast to ID) identifier for the customer. It should be unique across a project. Once it’s set it cannot be changed.
            </remarks>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.Email">
            <summary>
            Stored in given case. For the uniqueness check, it is treated as case-insensitive.
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.FirstName">
            <summary>
            First Name
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.LastName">
            <summary>
            Last Name
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.MiddleName">
            <summary>
            Middle Name
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.AnonymousCartId">
            <summary>
            Identifies a single cart that will be assigned to the new customer account.
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.AnonymousId">
            <summary>
            Identifies carts and orders belonging to an anonymous session that will be assigned to the new customer account.
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.ExternalId">
            <summary>
            External Id
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.DateOfBirth">
            <summary>
            Date Of Birth
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.CompanyName">
            <summary>
            Company Name
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.VatId">
            <summary>
            Vat Id
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.IsEmailVerified">
            <summary>
            Is Email Verified
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.CustomerGroup">
            <summary>
            Reference to a CustomerGroup
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.Addresses">
            <summary>
            Sets the ID of each address to be unique in the addresses list.
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.DefaultBillingAddress">
            <summary>
            The index of the address in the addresses array. The defaultBillingAddressId of the customer will be set to the ID of that address.
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.BillingAddresses">
            <summary>
            The indices of the addresses in the addresses array. The billingAddressIds of the customer will be set to the IDs of that addresses.
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.DefaultShippingAddress">
            <summary>
            The index of the address in the addresses array. The defaultShippingAddressId of the customer will be set to the ID of that address.
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.ShippingAddresses">
            <summary>
            The indices of the addresses in the addresses array. The shippingAddressIds of the Customer will be set to the IDs of that addresses.
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.Custom">
            <summary>
            The custom fields.
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerDraft.Locale">
            <summary>
            String conforming to IETF language tag.
            </summary>
        </member>
        <member name="M:commercetools.Customers.CustomerDraft.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.CustomerManager">
            <summary>
            Provides access to the functions in the Customers section of the API.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html"/>
        </member>
        <member name="M:commercetools.Customers.CustomerManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.Customers.CustomerManager.GetCustomerByIdAsync(System.String)">
            <summary>
            Gets a Customer by its ID.
            </summary>
            <param name="customerId">Customer ID</param>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#get-customer-by-id"/>
            <returns>Customer</returns>
        </member>
        <member name="M:commercetools.Customers.CustomerManager.QueryCustomersAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Queries for Customers.
            </summary>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <returns>CustomerQueryResult</returns>
        </member>
        <member name="M:commercetools.Customers.CustomerManager.CreateCustomerAsync(commercetools.Customers.CustomerDraft)">
            <summary>
            Creates a customer. If an anonymous cart is given then the cart is assigned to the created customer and the version number of the Cart will increase. If the id of an anonymous session is given, all carts and orders will be assigned to the created customer.
            </summary>
            <param name="customerDraft">CustomerDraft</param>
            <returns>CustomerCreatedMessage</returns>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#create-customer-sign-up"/>
        </member>
        <member name="M:commercetools.Customers.CustomerManager.UpdateCustomerAsync(commercetools.Customers.Customer,commercetools.Common.UpdateAction)">
            <summary>
            Updates a Customer.
            </summary>
            <param name="customer">Customer</param>
            <param name="action">The  update action to be performed on the Customer.</param>
            <returns>Customer</returns>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#update-customer"/>
        </member>
        <member name="M:commercetools.Customers.CustomerManager.UpdateCustomerAsync(commercetools.Customers.Customer,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a Customer.
            </summary>
            <param name="customer">Customer</param>
            <param name="actions">The list of update actions to be performed on the Customer.</param>
            <returns>Customer</returns>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#update-customer"/>
        </member>
        <member name="M:commercetools.Customers.CustomerManager.UpdateCustomerAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a Customer.
            </summary>
            <param name="customerId">ID of the Customer</param>
            <param name="version">The expected version of the Customer on which the changes should be applied.</param>
            <param name="actions">The list of update actions to be performed on the Customer.</param>
            <returns>Customer</returns>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#update-customer"/>
        </member>
        <member name="M:commercetools.Customers.CustomerManager.ChangeCustomersPassword(commercetools.Customers.Customer,System.String,System.String)">
            <summary>
            ChangeCustomersPassword
            </summary>
            <param name="customer">Customer</param>
            <param name="currentPassword">Current password</param>
            <param name="newPassword">New password</param>
            <returns>Customer</returns>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#change-customers-password"/>
        </member>
        <member name="M:commercetools.Customers.CustomerManager.ChangeCustomersPassword(System.String,System.Int32,System.String,System.String)">
            <summary>
            ChangeCustomersPassword
            </summary>
            <param name="id">Customer ID</param>
            <param name="version">Customer version</param>
            <param name="currentPassword">Current password</param>
            <param name="newPassword">New password</param>
            <returns>Customer</returns>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#change-customers-password"/>
        </member>
        <member name="M:commercetools.Customers.CustomerManager.AuthenticateCustomerAsync(System.String,System.String,System.String,System.Nullable{commercetools.Customers.AnonymousCartSignInMode},System.String)">
            <summary>
            Retrieves the authenticated customer (a customer that matches the given email/password pair).
            </summary>
            <param name="email">Email</param>
            <param name="password">Password</param>
            <param name="anonymousCartId">Anonymous cart ID</param>
            <param name="anonymousCartSignInMode">AnonymousCartSignInMode</param>
            <param name="anonymousId">AnonymousId</param>
            <returns>CustomerSignInResult</returns>
            <see href="https://dev.commercetools.com/http-api-projects-customers.html#authenticate-customer-sign-in"/>
        </member>
        <member name="M:commercetools.Customers.CustomerManager.DeleteCustomerAsync(commercetools.Customers.Customer)">
            <summary>
            Removes a Customer.
            </summary>
            <param name="customer">Customer</param>
            <returns>Customer</returns>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#delete-customer"/>
        </member>
        <member name="M:commercetools.Customers.CustomerManager.DeleteCustomerAsync(System.String,System.Int32)">
            <summary>
            Removes a Customer.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="version">Customer version</param>
            <returns>Customer</returns>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#delete-customer"/>
        </member>
        <member name="T:commercetools.Customers.CustomerQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of Customer objects.
            </summary>
            <see href="https://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="P:commercetools.Customers.CustomerQueryResult.Results">
            <summary>
            Results
            </summary>
        </member>
        <member name="M:commercetools.Customers.CustomerQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Customers.CustomerSignInResult">
            <summary>
            CustomerSignInResult
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-customers.html#customersigninresult"/>
        </member>
        <member name="P:commercetools.Customers.CustomerSignInResult.Customer">
            <summary>
            Customer
            </summary>
        </member>
        <member name="P:commercetools.Customers.CustomerSignInResult.Cart">
            <summary>
            Cart
            </summary>
        </member>
        <member name="M:commercetools.Customers.CustomerSignInResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Customers.AnonymousCartSignInMode">
            <summary>
            List of anyonymous cart sign in modes.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-customers.html#anonymouscartsigninmode"/>
        </member>
        <member name="T:commercetools.Customers.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.Customers.Extensions.Customers(commercetools.Common.Client)">
            <summary>
            Creates an instance of the CustomerManager.
            </summary>
            <returns>CustomerManager</returns>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.AddAddressAction">
            <summary>
            Adds an address to the customer's addresses array. Sets the address ID to be unique in the addresses list.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#add-address"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.AddAddressAction.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.AddAddressAction.#ctor(commercetools.Common.Address)">
            <summary>
            Constructor.
            </summary>
            <param name="address">Address</param>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.AddBillingAddressIdAction">
            <summary>
            Adds an existing address from the Customer’s addresses - referred to by its id - to the Customer’s billingAddressIds.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#add-billing-address-id"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.AddBillingAddressIdAction.AddressId">
            <summary>
            Address ID
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.AddBillingAddressIdAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="addressId">Address ID</param>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.AddShippingAddressIdAction">
            <summary>
            Adds an existing address from the Customer's addresses - referred to by its id - to the Customer's shippingAddressIds.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#add-shipping-address-id"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.AddShippingAddressIdAction.AddressId">
            <summary>
            Address ID
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.AddShippingAddressIdAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="addressId">Address ID</param>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.ChangeAddressAction">
            <summary>
            Replaces the address with the given ID, with the new address in the customer's addresses array. The new address will have the same ID.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#change-address"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.ChangeAddressAction.AddressId">
            <summary>
            Address ID
            </summary>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.ChangeAddressAction.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.ChangeAddressAction.#ctor(System.String,commercetools.Common.Address)">
            <summary>
            Constructor.
            </summary>
            <param name="addressId">Address ID</param>
            <param name="address">Address</param>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.ChangeEmailAction">
            <summary>
            ChangeEmailAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#change-email"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.ChangeEmailAction.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.ChangeEmailAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="email">Email</param>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.RemoveAddressAction">
            <summary>
            Removes the address with the given ID from the customer's addresses array.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#remove-address"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.RemoveAddressAction.AddressId">
            <summary>
            Address ID
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.RemoveAddressAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="addressId">Address ID</param>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.RemoveBillingAddressIdAction">
            <summary>
            Removes an existing billing address from the Customer’s billingAddressesIds.
            </summary>
            <remarks>
            If the billing address is the Customer’s default billing address the Customer’s defaultBillingAddressId will be unset.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#remove-billing-address-id"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.RemoveBillingAddressIdAction.AddressId">
            <summary>
            Address ID
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.RemoveBillingAddressIdAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="addressId">Address ID</param>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.RemoveShippingAddressIdAction">
            <summary>
            Removes an existing shipping address from the Customer's shippingAddressesIds.
            </summary>
            <remarks>
            If the shipping address is the Customer's default shipping address the Customer's defaultShippingAddressId will be unset.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#remove-shipping-address-id"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.RemoveShippingAddressIdAction.AddressId">
            <summary>
            Address ID
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.RemoveShippingAddressIdAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="addressId">Address ID</param>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetCompanyNameAction">
            <summary>
            SetCompanyNameAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-company-name"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetCompanyNameAction.CompanyName">
            <summary>
            Company Name
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetCompanyNameAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetCustomerGroupAction">
            <summary>
            SetCustomerGroupAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-customergroup"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetCustomerGroupAction.CustomerGroup">
            <summary>
            If not defined, the customer group is unset.
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetCustomerGroupAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetCustomerNumberAction">
            <summary>
            Sets a string that uniquely identifies a customer. It can be used to create more human-readable (in contrast to ID) identifier for the customer.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-customer-number"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetCustomerNumberAction.CustomerNumber">
            <summary>
            Customer Number
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetCustomerNumberAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetCustomFieldAction">
            <summary>
            SetCustomFieldAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-customfield"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetCustomFieldAction.Name">
            <summary>
            Field name
            </summary>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetCustomFieldAction.Value">
            <summary>
            Field value
            </summary>
            <remarks>
            If absent or null, this field is removed if it exists.
            </remarks>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetCustomFieldAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Field name</param>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetCustomTypeAction">
            <summary>
            This action sets or removes the custom type for an existing customer.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-custom-type"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetCustomTypeAction.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetCustomTypeAction.Fields">
            <summary>
            Fields
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetCustomTypeAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetDateOfBirthAction">
            <summary>
            SetDateOfBirthAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-date-of-birth"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetDateOfBirthAction.DateOfBirth">
            <summary>
            DateOfBirth
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetDateOfBirthAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetDefaultBillingAddressAction">
            <summary>
            Sets the default billing address from the Customer’s addresses.
            </summary>
            <remarks>
            If the address is not in the Customer’s billing addresses it will be added to the Customer’s billingAddressIds.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-default-billing-address"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetDefaultBillingAddressAction.AddressId">
            <summary>
            If not defined, the customer’s defaultBillingAddress is unset.
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetDefaultBillingAddressAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetDefaultShippingAddressAction">
            <summary>
            Sets the default shipping address from the Customer's addresses.
            </summary>
            <remarks>
            If the address is not in the Customer's shipping addresses it will be added to the Customer's shippingAddressIds.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-default-shipping-address"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetDefaultShippingAddressAction.AddressId">
            <summary>
            Address ID
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetDefaultShippingAddressAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetExternalIdAction">
            <summary>
            Sets a new ID which can be used as additional identifier for external Systems like CRM or ERP.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-external-id"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetExternalIdAction.ExternalId">
            <summary>
            External ID
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetExternalIdAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetFirstNameAction">
            <summary>
            SetFirstNameAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-first-name"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetFirstNameAction.FirstName">
            <summary>
            First Name
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetFirstNameAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetLastNameAction">
            <summary>
            SetLastNameAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-last-name"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetLastNameAction.LastName">
            <summary>
            Last Name
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetLastNameAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetLocaleAction">
            <summary>
            Sets the locale. Must be one of the languages supported for this Project.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-locale"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetLocaleAction.Locale">
            <summary>
            String conforming to IETF language tag
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetLocaleAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetMiddleNameAction">
            <summary>
            SetMiddleNameAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-middle-name"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetMiddleNameAction.MiddleName">
            <summary>
            Middle name
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetMiddleNameAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetTitleAction">
            <summary>
            SetTitleAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-title"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetTitleAction.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetTitleAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Customers.UpdateActions.SetVatIdAction">
            <summary>
            SetVatIdAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-customers.html#set-vat-id"/>
        </member>
        <member name="P:commercetools.Customers.UpdateActions.SetVatIdAction.VatId">
            <summary>
            VatId
            </summary>
        </member>
        <member name="M:commercetools.Customers.UpdateActions.SetVatIdAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Messages.CategoryCreatedMessage">
            <summary>
            This message is the result of the create category request. 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#categorycreated-message"/>
        </member>
        <member name="M:commercetools.Messages.CategoryCreatedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.CategorySlugChangedMessage">
            <summary>
            This message is the result of the changeSlug update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#categoryslugchanged-message"/>
        </member>
        <member name="M:commercetools.Messages.CategorySlugChangedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.CustomerCreatedMessage">
            <summary>
            This message is the result of the create customer request.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#customercreated-message"/>
        </member>
        <member name="M:commercetools.Messages.CustomerCreatedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.CustomLineItemStateTransitionMessage">
            <summary>
            This message is the result of the transitionCustomLineItemState update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#customlineitemstatetransition-message"/>
        </member>
        <member name="M:commercetools.Messages.CustomLineItemStateTransitionMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.DeliveryAddedMessage">
            <summary>
            This message is the result of the addDelivery update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#deliveryadded-message"/>
        </member>
        <member name="M:commercetools.Messages.DeliveryAddedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.Messages.Extensions.Messages(commercetools.Common.Client)">
            <summary>
            Creates an instance of the MessageManager.
            </summary>
            <returns>MessageManager</returns>
        </member>
        <member name="T:commercetools.Messages.InventoryEntryDeletedMessage">
            <summary>
            This message is the result of the delete InventoryEntry request. 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#inventoryentrydeleted-message"/>
        </member>
        <member name="M:commercetools.Messages.InventoryEntryDeletedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.LineItemStateTransitionMessage">
            <summary>
            This message is the result of the transitionLineItemState update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#lineitemstatetransition-message"/>
        </member>
        <member name="M:commercetools.Messages.LineItemStateTransitionMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.Message">
            <summary>
            A message represents a change or an action performed on a resource.
            </summary>
            <remarks>
            Messages can be seen as a subset of the change history for a resource inside a project. It is a subset because not all changes on resources result in messages. This feature needs to be activated manually. 
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#message"/>
        </member>
        <member name="P:commercetools.Messages.Message.Id">
            <summary>
            The unique ID of the message.
            </summary>
        </member>
        <member name="P:commercetools.Messages.Message.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:commercetools.Messages.Message.SequenceNumber">
            <summary>
            It's a number of this message in relation to other messages in the context of a specific resource.
            </summary>
        </member>
        <member name="P:commercetools.Messages.Message.Resource">
            <summary>
            A reference to the resource on which the change was performed.
            </summary>
        </member>
        <member name="P:commercetools.Messages.Message.ResourceVersion">
            <summary>
            The version of the resource on which the change was performed.
            </summary>
        </member>
        <member name="P:commercetools.Messages.Message.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:commercetools.Messages.Message.CreatedAt">
            <summary>
            Created At
            </summary>
        </member>
        <member name="P:commercetools.Messages.Message.LastModifiedAt">
            <summary>
            Last Modified At
            </summary>
        </member>
        <member name="M:commercetools.Messages.Message.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.MessageFactory">
            <summary>
            MessageFactory
            </summary>
        </member>
        <member name="M:commercetools.Messages.MessageFactory.Create(System.Object)">
            <summary>
            Creates an AttributeType using JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
            <returns>A object derived from AttributeType, or null</returns>
        </member>
        <member name="T:commercetools.Messages.MessageManager">
            <summary>
            Provides access to the functions in the Messages section of the API.
            </summary>
        </member>
        <member name="M:commercetools.Messages.MessageManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.Messages.MessageManager.GetMessageByIdAsync(System.String)">
            <summary>
            Gets a Message by its ID.
            </summary>
            <param name="messageId">Message ID</param>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#get-message-by-id"/>
            <returns>Message</returns>
        </member>
        <member name="M:commercetools.Messages.MessageManager.QueryMessagesAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Queries for Messages.
            </summary>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <returns>MessageQueryResult</returns>
        </member>
        <member name="T:commercetools.Messages.MessageQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of Message objects.
            </summary>
            <see href="http://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="M:commercetools.Messages.MessageQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.MessagesConfiguration">
            <summary>
            This object is used to to configure the parameters of the Messages feature for the project. It is stored in the Project's messages field.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#messages-configuration"/>
        </member>
        <member name="P:commercetools.Messages.MessagesConfiguration.Enabled">
            <summary>
            Enabled
            </summary>
        </member>
        <member name="M:commercetools.Messages.MessagesConfiguration.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.OrderBillingAddressSetMessage">
            <summary>
            This message is created when the billing address of an existing order is modified.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#orderbillingaddressset-message"/>
        </member>
        <member name="P:commercetools.Messages.OrderBillingAddressSetMessage.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="M:commercetools.Messages.OrderBillingAddressSetMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.OrderCreatedMessage">
            <summary>
            This message is created when a cart is ordered.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#ordercreated-message"/>
        </member>
        <member name="P:commercetools.Messages.OrderCreatedMessage.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="M:commercetools.Messages.OrderCreatedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.OrderCustomerEmailSetMessage">
            <summary>
            This message is created when the customer email of an existing order is modified. 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#ordercustomeremailset-message"/>
        </member>
        <member name="P:commercetools.Messages.OrderCustomerEmailSetMessage.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="M:commercetools.Messages.OrderCustomerEmailSetMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.OrderImportedMessage">
            <summary>
            This message is created when an order is imported.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#orderimported-message"/>
        </member>
        <member name="P:commercetools.Messages.OrderImportedMessage.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="M:commercetools.Messages.OrderImportedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.OrderShippingAddressSetMessage">
            <summary>
            This message is created when the shipping address of an existing order is changed.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#ordershippingaddressset-message"/>
        </member>
        <member name="P:commercetools.Messages.OrderShippingAddressSetMessage.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="M:commercetools.Messages.OrderShippingAddressSetMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.OrderStateChangedMessage">
            <summary>
            This message is created when the OrderState is changed.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#orderstatechanged-message"/>
        </member>
        <member name="M:commercetools.Messages.OrderStateChangedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.OrderStateTransitionMessage">
            <summary>
            This message is the result of the transitionState update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#orderstatetransition-message"/>
        </member>
        <member name="P:commercetools.Messages.OrderStateTransitionMessage.State">
            <summary>
            State
            </summary>
        </member>
        <member name="P:commercetools.Messages.OrderStateTransitionMessage.Force">
            <summary>
            Force
            </summary>
        </member>
        <member name="M:commercetools.Messages.OrderStateTransitionMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.ParcelAddedToDeliveryMessage">
            <summary>
            This message is the result of the addParcelToDelivery update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#parceladdedtodelivery-message"/>
        </member>
        <member name="P:commercetools.Messages.ParcelAddedToDeliveryMessage.Delivery">
            <summary>
            Delivery
            </summary>
        </member>
        <member name="P:commercetools.Messages.ParcelAddedToDeliveryMessage.Parcel">
            <summary>
            Parcel
            </summary>
        </member>
        <member name="M:commercetools.Messages.ParcelAddedToDeliveryMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.PaymentCreatedMessage">
            <summary>
            This message is the result of a create action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#paymentcreated-message"/>
        </member>
        <member name="P:commercetools.Messages.PaymentCreatedMessage.Payment">
            <summary>
            Payment
            </summary>
        </member>
        <member name="M:commercetools.Messages.PaymentCreatedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.PaymentInteractionAddedMessage">
            <summary>
            This message is the result of the addInterfaceInteraction update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#paymentinteractionadded-message"/>
        </member>
        <member name="P:commercetools.Messages.PaymentInteractionAddedMessage.Interaction">
            <summary>
            Interaction
            </summary>
        </member>
        <member name="M:commercetools.Messages.PaymentInteractionAddedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.PaymentStatusStateTransitionMessage">
            <summary>
            This message is the result of the transitionState update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#paymentstatusstatetransition-message"/>
        </member>
        <member name="P:commercetools.Messages.PaymentStatusStateTransitionMessage.State">
            <summary>
            State
            </summary>
        </member>
        <member name="P:commercetools.Messages.PaymentStatusStateTransitionMessage.Force">
            <summary>
            Force
            </summary>
        </member>
        <member name="M:commercetools.Messages.PaymentStatusStateTransitionMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.PaymentTransactionAddedMessage">
            <summary>
            This message is the result of the addTransaction update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#paymenttransactionadded-message"/>
        </member>
        <member name="P:commercetools.Messages.PaymentTransactionAddedMessage.Transaction">
            <summary>
            Transaction
            </summary>
        </member>
        <member name="M:commercetools.Messages.PaymentTransactionAddedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.PaymentTransactionStateChangedMessage">
            <summary>
            This message is the result of the changeTransactionState update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#paymenttransactionstatechanged-message"/>
        </member>
        <member name="P:commercetools.Messages.PaymentTransactionStateChangedMessage.TransactionId">
            <summary>
            Transaction ID
            </summary>
        </member>
        <member name="P:commercetools.Messages.PaymentTransactionStateChangedMessage.State">
            <summary>
            State
            </summary>
        </member>
        <member name="M:commercetools.Messages.PaymentTransactionStateChangedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.ProductCreatedMessage">
            <summary>
            This message is the result of the create product request.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#productcreated-message"/>
        </member>
        <member name="P:commercetools.Messages.ProductCreatedMessage.ProductProjection">
            <summary>
            Product Projection
            </summary>
        </member>
        <member name="M:commercetools.Messages.ProductCreatedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.ProductPublishedMessage">
            <summary>
            This message is the result of the publish update action. 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#productpublished-message"/>
        </member>
        <member name="P:commercetools.Messages.ProductPublishedMessage.ProductProjection">
            <summary>
            Product Projection
            </summary>
        </member>
        <member name="M:commercetools.Messages.ProductPublishedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.ProductSlugChangedMessage">
            <summary>
            This message is the result of the changeSlug update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#productslugchanged-message"/>
        </member>
        <member name="P:commercetools.Messages.ProductSlugChangedMessage.Slug">
            <summary>
            Slug
            </summary>
        </member>
        <member name="M:commercetools.Messages.ProductSlugChangedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.ProductStateTransitionMessage">
            <summary>
            This message is the result of the transitionState update action. 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#productstatetransition-message"/>
        </member>
        <member name="P:commercetools.Messages.ProductStateTransitionMessage.Reference">
            <summary>
            Reference
            </summary>
        </member>
        <member name="P:commercetools.Messages.ProductStateTransitionMessage.Force">
            <summary>
            Force
            </summary>
        </member>
        <member name="M:commercetools.Messages.ProductStateTransitionMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.ProductUnpublishedMessage">
            <summary>
            This message is the result of the unpublish update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#productunpublished-message"/>
        </member>
        <member name="M:commercetools.Messages.ProductUnpublishedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.ReturnInfoAddedMessage">
            <summary>
            This message is the result of the addParcelToDelivery update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#returninfoadded-message"/>
        </member>
        <member name="P:commercetools.Messages.ReturnInfoAddedMessage.ReturnInfo">
            <summary>
            ReturnInfo
            </summary>
        </member>
        <member name="M:commercetools.Messages.ReturnInfoAddedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.ReviewCreatedMessage">
            <summary>
            This message is the result of the create review request.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#reviewcreated-message"/>
        </member>
        <member name="P:commercetools.Messages.ReviewCreatedMessage.Review">
            <summary>
            Review
            </summary>
        </member>
        <member name="M:commercetools.Messages.ReviewCreatedMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.ReviewRatingSetMessage">
            <summary>
            This message is the result of the setRating update action.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#reviewratingset-message"/>
        </member>
        <member name="P:commercetools.Messages.ReviewRatingSetMessage.OldRating">
            <summary>
            Old Rating
            </summary>
        </member>
        <member name="P:commercetools.Messages.ReviewRatingSetMessage.NewRating">
            <summary>
            New Rating
            </summary>
        </member>
        <member name="P:commercetools.Messages.ReviewRatingSetMessage.IncludedInStatistics">
            <summary>
            Included In Statistics
            </summary>
        </member>
        <member name="P:commercetools.Messages.ReviewRatingSetMessage.Target">
            <summary>
            Target
            </summary>
        </member>
        <member name="M:commercetools.Messages.ReviewRatingSetMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Messages.ReviewStateTransitionMessage">
            <summary>
            This message is the result of the transitionState update action. 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-messages.html#reviewstatetransition-message"/>
        </member>
        <member name="P:commercetools.Messages.ReviewStateTransitionMessage.OldState">
            <summary>
            Old State
            </summary>
        </member>
        <member name="P:commercetools.Messages.ReviewStateTransitionMessage.NewState">
            <summary>
            New State
            </summary>
        </member>
        <member name="P:commercetools.Messages.ReviewStateTransitionMessage.OldIncludedInStatistics">
            <summary>
            Indicates if this review was taken into account in the ratings statistics of the target before the state transition.
            </summary>
        </member>
        <member name="P:commercetools.Messages.ReviewStateTransitionMessage.NewIncludedInStatistics">
            <summary>
            Indicates if this review is taken into account in the ratings statistics of the target after the state transition.
            </summary>
        </member>
        <member name="P:commercetools.Messages.ReviewStateTransitionMessage.Target">
            <summary>
            Target
            </summary>
        </member>
        <member name="P:commercetools.Messages.ReviewStateTransitionMessage.Force">
            <summary>
            Force
            </summary>
        </member>
        <member name="M:commercetools.Messages.ReviewStateTransitionMessage.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Orders.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.Orders.Extensions.Orders(commercetools.Common.Client)">
            <summary>
            Creates an instance of the OrderManager.
            </summary>
            <returns>OrderManager</returns>
        </member>
        <member name="T:commercetools.Orders.OrderQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of Order objects.
            </summary>
            <see href="http://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="P:commercetools.Orders.OrderQueryResult.Results">
            <summary>
            Results
            </summary>
        </member>
        <member name="M:commercetools.Orders.OrderQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Orders.ReturnItemDraft">
            <summary>
            The ReturnItemDraft needs to be given with the Add ReturnInfo update method.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#returnitemdraft"/>
        </member>
        <member name="M:commercetools.Orders.ReturnItemDraft.#ctor(System.Int32,System.String,commercetools.Orders.ReturnShipmentState)">
            <summary>
            Constructor.
            </summary>
            <param name="quantity">Quantity</param>
            <param name="lineItemId">Line item ID</param>
            <param name="shipmentState">ReturnShipmentState</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.AddDeliveryAction">
            <summary>
            Add delivery
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#add-delivery"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.AddDeliveryAction.Items">
            <summary>
            Items to add
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.AddDeliveryAction.Parcels">
            <summary>
            List of parcels
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.AddDeliveryAction.#ctor(System.Collections.Generic.List{commercetools.Orders.DeliveryItem})">
            <summary>
            Constructor.
            </summary>
            <param name="items">Items to add</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.AddParcelAction">
            <summary>
            In order to add a Parcel, there needs to be at least one Delivery with at least one DeliveryItem created before.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#add-parcel"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.AddParcelAction.DeliveryId">
            <summary>
            ID of the concerning DeliveryItem.
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.AddParcelAction.Measurements">
            <summary>
            Measurements
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.AddParcelAction.TrackingData">
            <summary>
            Tracking data
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.AddParcelAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="deliveryId">ID of the concerning DeliveryItem.</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.AddPaymentAction">
            <summary>
            This action adds a payment to the PaymentInfo. The payment must not be assigned to another Order or active Cart yet.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#add-payment"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.AddPaymentAction.Payment">
            <summary>
            Reference to a Payment
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.AddPaymentAction.#ctor(commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
            <param name="payment">Reference to a Payment</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.AddReturnInfoAction">
            <summary>
            Adds a product variant in the given quantity to the cart.
            </summary>
            <remarks>
            If the cart already contains the product variant for the given supply and distribution channel, then only quantity of the LineItem is increased.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#add-lineitem"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.AddReturnInfoAction.ReturnDate">
            <summary>
            ReturnDate
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.AddReturnInfoAction.ReturnTrackingId">
            <summary>
            Identifies, which return tracking ID is connected to this particular return.
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.AddReturnInfoAction.Items">
            <summary>
            The items to be returned.
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.AddReturnInfoAction.#ctor(System.Collections.Generic.List{commercetools.Orders.ReturnItemDraft})">
            <summary>
            Constructor.
            </summary>
            <param name="items">The items to be returned</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.ChangeOrderStateAction">
            <summary>
            ChangeOrderStateAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#change-orderstate"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.ChangeOrderStateAction.OrderState">
            <summary>
            OrderState
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.ChangeOrderStateAction.#ctor(commercetools.Orders.OrderState)">
            <summary>
            Constructor.
            </summary>
            <param name="orderState">OrderState</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.ChangePaymentStateAction">
            <summary>
            Changes the payment state.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#change-paymentstate"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.ChangePaymentStateAction.PaymentState">
            <summary>
            PaymentState
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.ChangePaymentStateAction.#ctor(commercetools.Orders.PaymentState)">
            <summary>
            Constructor.
            </summary>
            <param name="paymentState">PaymentState</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.ImportCustomLineItemStateAction">
            <summary>
            These import of states does not follow any predefined rules and should be only used if no transitions are defined.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#add-lineitem"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.ImportCustomLineItemStateAction.CustomLineItemId">
            <summary>
            Custom line item ID
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.ImportCustomLineItemStateAction.State">
            <summary>
            List of item states
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.ImportCustomLineItemStateAction.#ctor(System.String,System.Collections.Generic.List{commercetools.Orders.ItemState})">
            <summary>
            Constructor.
            </summary>
            <param name="customLineItemId">Custom line item ID</param>
            <param name="state">List of item states</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.ImportLineItemStateAction">
            <summary>
            These import of states does not follow any predefined rules and should be only used if no transitions are defined.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-carts.html#add-lineitem"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.ImportLineItemStateAction.LineItemId">
            <summary>
            Line item ID
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.ImportLineItemStateAction.State">
            <summary>
            List of item states
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.ImportLineItemStateAction.#ctor(System.String,System.Collections.Generic.List{commercetools.Orders.ItemState})">
            <summary>
            Constructor.
            </summary>
            <param name="lineItemId">Line item ID</param>
            <param name="state">List of item states</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.RemovePaymentAction">
            <summary>
            This action removes a payment from the PaymentInfo.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#remove-payment"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.RemovePaymentAction.Payment">
            <summary>
            Reference to a Payment
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.RemovePaymentAction.#ctor(commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
            <param name="payment">Reference to a Payment</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetBillingAddressAction">
            <summary>
            This action sets, overwrites or removes any existing value for billingAddress.
            </summary>
            <remarks>
            This action does not change the billing address on the Cart the order has been created from.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-billing-address"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetBillingAddressAction.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetBillingAddressAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetCustomerEmailAction">
            <summary>
            This action sets, overwrites or removes any existing value for customerEmail.
            </summary>
            <remarks>
            This action does not change the customer email on the Cart the order has been created from.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-customer-email"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetCustomerEmailAction.Email">
            <summary>
            Customer email
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetCustomerEmailAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetCustomFieldAction">
            <summary>
            This action sets, overwrites or removes any existing custom field for an existing order.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-customfield"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetCustomFieldAction.Name">
            <summary>
            Field name
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetCustomFieldAction.Value">
            <summary>
            Field value
            </summary>
            <remarks>
            If absent or null, this field is removed if it exists.
            </remarks>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetCustomFieldAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Field name</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetCustomLineItemCustomFieldAction">
            <summary>
            This action sets, overwrites or removes any existing custom field for an existing order CustomLineItem.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-customlineitem-customfield"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetCustomLineItemCustomFieldAction.CustomLineItemId">
            <summary>
            Custom line item ID
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetCustomLineItemCustomFieldAction.Name">
            <summary>
            Field name
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetCustomLineItemCustomFieldAction.Value">
            <summary>
            Field value
            </summary>
            <remarks>
            If absent or null, this field is removed if it exists.
            </remarks>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetCustomLineItemCustomFieldAction.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="customLineItemId">Custom line item ID</param>
            <param name="name">Field name</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetCustomLineItemCustomTypeAction">
            <summary>
            This action sets, overwrites or removes the existing custom type and fields for an existing order CustomLineItem.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-customlineitem-custom-type"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetCustomLineItemCustomTypeAction.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetCustomLineItemCustomTypeAction.CustomLineItemId">
            <summary>
            Custom line item ID
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetCustomLineItemCustomTypeAction.Fields">
            <summary>
            A valid JSON object, based on the FieldDefinitions of the Type 
            </summary>
            <remarks>
            If set, the custom fields are set to this new value.
            </remarks>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetCustomLineItemCustomTypeAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="customLineItemId">Custom line item ID</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetCustomTypeAction">
            <summary>
            This action sets, overwrites or removes any existing custom type and fields for an existing order.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-custom-type"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetCustomTypeAction.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetCustomTypeAction.Fields">
            <summary>
            A valid JSON object, based on the FieldDefinitions of the Type 
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetCustomTypeAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetLineItemCustomFieldAction">
            <summary>
            This action sets, overwrites or removes any existing custom field for an existing order LineItem.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-lineitem-customfield"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetLineItemCustomFieldAction.LineItemId">
            <summary>
            Line item ID
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetLineItemCustomFieldAction.Name">
            <summary>
            Field name
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetLineItemCustomFieldAction.Value">
            <summary>
            Field value
            </summary>
            <remarks>
            If absent or null, this field is removed if it exists.
            </remarks>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetLineItemCustomFieldAction.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="lineItemId">Line item ID</param>
            <param name="name">Field name</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetLineItemCustomTypeAction">
            <summary>
            This action sets, overwrites or removes the existing custom type and fields for an existing order LineItem.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-lineitem-custom-type"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetLineItemCustomTypeAction.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetLineItemCustomTypeAction.LineItemId">
            <summary>
            Line item ID
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetLineItemCustomTypeAction.Fields">
            <summary>
            A valid JSON object, based on the FieldDefinitions of the Type 
            </summary>
            <remarks>
            If set, the custom fields are set to this new value.
            </remarks>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetLineItemCustomTypeAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="lineItemId">Line item ID</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetLocaleAction">
            <summary>
            Sets the locale. Must be one of the languages supported for this Project.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-locale"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetLocaleAction.Locale">
            <summary>
            String conforming to IETF language tag
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetLocaleAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetOrderNumberAction">
            <summary>
            Sets a string that uniquely identifies an order. It can be used to create more human-readable (in contrast to ID) identifier for the order.
            </summary>>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-order-number"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetOrderNumberAction.OrderNumber">
            <summary>
            It should be unique across a project. Once it's set, it cannot be changed.
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetOrderNumberAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="orderNumber">It should be unique across a project. Once it's set, it cannot be changed.</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetReturnPaymentStateAction">
            <summary>
            In order to set a ReturnPaymentState, there needs to be at least one ReturnInfo with at least one ReturnItem created before.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-returnpaymentstate"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetReturnPaymentStateAction.ReturnItemId">
            <summary>
             ID of the concerning ReturnItem
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetReturnPaymentStateAction.PaymentState">
            <summary>
            Payment state
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetReturnPaymentStateAction.#ctor(System.String,commercetools.Orders.ReturnPaymentState)">
            <summary>
            Constructor.
            </summary>
            <param name="returnItemId">ID of the concerning ReturnItem</param>
            <param name="paymentState">Payment state</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetReturnShipmentStateAction">
            <summary>
            In order to set a ReturnShipmentState, there needs to be at least one ReturnInfo with at least one ReturnItem created before.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-returnshipmentstate"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetReturnShipmentStateAction.ReturnItemId">
            <summary>
            ID of the concerning ReturnItem
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetReturnShipmentStateAction.ShipmentState">
            <summary>
            Shipment state
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetReturnShipmentStateAction.#ctor(System.String,commercetools.Orders.ReturnShipmentState)">
            <summary>
            Constructor.
            </summary>
            <param name="returnItemId">ID of the concerning ReturnItem</param>
            <param name="shipmentState">Shipment state</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.SetShippingAddressAction">
            <summary>
            This action sets, overwrites or removes any existing value for shippingAddress.
            </summary>
            <remarks>
            Changing the shipping address does not recalculate the cart. The taxes might not fit to the shipping address anymore. This action does not change the shipping address on the Cart the order has been created from.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#set-shipping-address"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.SetShippingAddressAction.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.SetShippingAddressAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.TransitionCustomLineItemStateAction">
            <summary>
            TransitionLineItemStateAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#change-the-state-of-customlineitem-according-to-allowed-transitions"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.TransitionCustomLineItemStateAction.CustomLineItemId">
            <summary>
            Custom line item ID
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.TransitionCustomLineItemStateAction.Quantity">
            <summary>
            Number
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.TransitionCustomLineItemStateAction.FromState">
            <summary>
            Reference to a state
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.TransitionCustomLineItemStateAction.ToState">
            <summary>
            Reference to a state
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.TransitionCustomLineItemStateAction.ActualTransitionDate">
            <summary>
            Actual transition date
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.TransitionCustomLineItemStateAction.#ctor(System.String,System.Int32,commercetools.Common.Reference,commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
            <param name="customLineItemId">Custom line item ID</param>
            <param name="quantity">Quantity</param>
            <param name="fromState">Reference to a state</param>
            <param name="toState">Reference to a state</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.TransitionLineItemStateAction">
            <summary>
            TransitionLineItemStateAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#change-the-state-of-lineitem-according-to-allowed-transitions"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.TransitionLineItemStateAction.LineItemId">
            <summary>
            Line item ID
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.TransitionLineItemStateAction.Quantity">
            <summary>
            Number
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.TransitionLineItemStateAction.FromState">
            <summary>
            Reference to a state
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.TransitionLineItemStateAction.ToState">
            <summary>
            Reference to a state
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.TransitionLineItemStateAction.ActualTransitionDate">
            <summary>
            Actual transition date
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.TransitionLineItemStateAction.#ctor(System.String,System.Int32,commercetools.Common.Reference,commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
            <param name="lineItemId">Line item ID</param>
            <param name="quantity">Quantity</param>
            <param name="fromState">Reference to a state</param>
            <param name="toState">Reference to a state</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.TransitionStateAction">
            <summary>
            Transition to a new state.
            </summary>
            <remarks>
            If there is no state yet, the new state must be an initial state. If the existing state has transitions set, there must be a direct transition to the new state. If transitions is not set, no validation is performed. These validations can be turned off by setting the force parameter to true.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#transition-state"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.TransitionStateAction.State">
            <summary>
            Reference to a State
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.TransitionStateAction.Force">
            <summary>
            Force - Defaults to false
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.TransitionStateAction.#ctor(commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
            <param name="state">Reference to a State</param>
        </member>
        <member name="T:commercetools.Orders.UpdateActions.UpdateSyncInfoAction">
            <summary>
            UpdateSyncInfoAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#update-syncinfo"/>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.UpdateSyncInfoAction.Channel">
            <summary>
            Reference to a channel.
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.UpdateSyncInfoAction.ExternalId">
            <summary>
            Can be used to reference an external order instance, file etc.
            </summary>
        </member>
        <member name="P:commercetools.Orders.UpdateActions.UpdateSyncInfoAction.SyncedAt">
            <summary>
            If not provided, then current date would be used
            </summary>
        </member>
        <member name="M:commercetools.Orders.UpdateActions.UpdateSyncInfoAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Orders.OrderFromCartDraft">
            <summary>
            OrderFromCartDraft
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#orderfromcartdraft"/>
        </member>
        <member name="M:commercetools.Orders.OrderFromCartDraft.#ctor(System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="id">The unique id of the cart from which an order is created.</param>
            <param name="version">Cart version</param>
        </member>
        <member name="T:commercetools.Orders.PaymentInfo">
            <summary>
            PaymentInfo
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#paymentinfo"/>
        </member>
        <member name="M:commercetools.Orders.PaymentInfo.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Orders.ReturnInfo">
            <summary>
            Stores information about returns connected to this order.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#returninfo"/>
        </member>
        <member name="M:commercetools.Orders.ReturnInfo.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Orders.Delivery">
            <summary>
            Deliveries are compilations of information on how the articles are being shipped to the customers.
            </summary>
            <remarks>
            A delivery can contain multiple items. All items in a delivery can be shipped with several parcels. To create a delivery, it is necessary to have a shipment method assigned to the order. A sample use case for a delivery object is to create a delivery note.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#delivery"/>
        </member>
        <member name="M:commercetools.Orders.Delivery.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Orders.Delivery.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Orders.Delivery.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Orders.DeliveryItem">
            <summary>
            DeliveryItem
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#deliveryitem"/>
        </member>
        <member name="M:commercetools.Orders.DeliveryItem.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Orders.OrderState">
            <summary>
            OrderState enumeration.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#order-state"/>
        </member>
        <member name="T:commercetools.Orders.PaymentState">
            <summary>
            PaymentState enumeration.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#paymentstate"/>
        </member>
        <member name="T:commercetools.Orders.ReturnPaymentState">
            <summary>
            ReturnPaymentState enumeration.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#returnpaymentstate"/>
        </member>
        <member name="T:commercetools.Orders.ReturnShipmentState">
            <summary>
            ReturnShipmentState enumeration.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#returnshipmentstate"/>
        </member>
        <member name="T:commercetools.Orders.ShipmentState">
            <summary>
            ShipmentState enumeration.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#shipmentstate"/>
        </member>
        <member name="T:commercetools.Orders.ItemState">
            <summary>
            For item states we also need the information how much of the quantity is affected by this state.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#itemstate"/>
        </member>
        <member name="M:commercetools.Orders.ItemState.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Orders.Order">
            <summary>
            An order can be created from a cart, usually after a checkout process has been completed. Orders can also be imported.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#order"/>
        </member>
        <member name="P:commercetools.Orders.Order.Id">
            <summary>
            The unique ID of the order.
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.Version">
            <summary>
            The current version of the order.
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.CreatedAt">
            <summary>
            Created At
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.LastModifiedAt">
            <summary>
            Last Modified At
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.CompletedAt">
            <summary>
            This field will only be present if it was set for Order Import
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.OrderNumber">
            <summary>
            String that uniquely identifies an order.
            </summary>
            <remarks>
            It can be used to create more human-readable (in contrast to ID) identifier for the order. It should be unique across a project. Once it’s set it cannot be changed.
            </remarks>
        </member>
        <member name="P:commercetools.Orders.Order.CustomerId">
            <summary>
            Customer Id
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.CustomerEmail">
            <summary>
            Customer Email
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.AnonymousId">
            <summary>
            Identifies carts and orders belonging to an anonymous session (the customer has not signed up/in yet).
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.LineItems">
            <summary>
            List of LineItems
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.CustomLineItems">
            <summary>
            List of CustomLineItems
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.TotalPrice">
            <summary>
            Total Price
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.TaxedPrice">
            <summary>
            The taxes are calculated based on the shipping address.
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.ShippingAddress">
            <summary>
            Shipping Address
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.BillingAddress">
            <summary>
            Billing Address
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.TaxMode">
            <summary>
            Tax Mode
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.TaxRoundingMode">
            <summary>
            When calculating taxes for taxedPrice, the selected mode is used for rouding.
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.CustomerGroup">
            <summary>
            Set when the customer is set and the customer is a member of a customer group. Used for product variant price selection.
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.Country">
            <summary>
            A two-digit country code as per ISO 3166-1 alpha-2. Used for product variant price selection.
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.OrderState">
            <summary>
            One of the four predefined OrderStates.
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.State">
            <summary>
            This reference can point to a state in a custom workflow.
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.ShipmentState">
            <summary>
            Shipment State
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.PaymentState">
            <summary>
            Payment State
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.ShippingInfo">
            <summary>
            Shipping Info
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.SyncInfo">
            <summary>
            List of SyncInfo
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.ReturnInfo">
            <summary>
            List of ReturnInfo
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.DiscountCodes">
            <summary>
            List of DiscountCodeInfo
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.LastMessageSequenceNumber">
            <summary>
            The sequence number of the last order message produced by changes to this order. 0 means, that no messages were created yet.
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.Cart">
            <summary>
            Set when this order was created from a cart. The cart will have the state Ordered.
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.Custom">
            <summary>
            Custom fields.
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.PaymentInfo">
            <summary>
            Payment Info
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.Locale">
            <summary>
            String conforming to IETF language tag.
            </summary>
        </member>
        <member name="P:commercetools.Orders.Order.InventoryMode">
            <summary>
            Inventory Mode
            </summary>
        </member>
        <member name="M:commercetools.Orders.Order.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Orders.Order.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Orders.Order.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Orders.OrderManager">
            <summary>
            Provides access to the functions in the Orders section of the API.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html"/>
        </member>
        <member name="M:commercetools.Orders.OrderManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.Orders.OrderManager.GetOrderByIdAsync(System.String)">
            <summary>
            Gets an Order by its ID.
            </summary>
            <param name="orderId">Order ID</param>
            <returns>Order</returns>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#get-order-by-id"/>
        </member>
        <member name="M:commercetools.Orders.OrderManager.QueryOrdersAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Queries for Orders.
            </summary>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <returns>OrderQueryResult</returns>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#query-orders"/>
        </member>
        <member name="M:commercetools.Orders.OrderManager.CreateOrderFromCartAsync(commercetools.Orders.OrderFromCartDraft)">
            <summary>
            Creates an order from a Cart. The cart must have a shipping address set which is used for the tax calculation. The cart data is copied to the created order.
            </summary>
            <param name="draft">OrderFromCartDraft</param>
            <returns>Order</returns>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#create-order-from-cart"/>
        </member>
        <member name="M:commercetools.Orders.OrderManager.UpdateOrderAsync(commercetools.Orders.Order,commercetools.Common.UpdateAction)">
            <summary>
            Updates an order.
            </summary>
            <param name="order">Order</param>
            <param name="action">The update action to be performed on the order.</param>
            <returns>Order</returns>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#update-order"/>
        </member>
        <member name="M:commercetools.Orders.OrderManager.UpdateOrderAsync(commercetools.Orders.Order,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates an order.
            </summary>
            <param name="order">Order</param>
            <param name="actions">The list of update actions to be performed on the order.</param>
            <returns>Order</returns>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#update-order"/>
        </member>
        <member name="M:commercetools.Orders.OrderManager.UpdateOrderAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates an order.
            </summary>
            <param name="orderId">ID of the order</param>
            <param name="version">The expected version of the order on which the changes should be applied.</param>
            <param name="actions">The list of update actions to be performed on the order.</param>
            <returns>Order</returns>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#update-order"/>
        </member>
        <member name="M:commercetools.Orders.OrderManager.DeleteOrderAsync(commercetools.Orders.Order)">
            <summary>
            Removes an Order. Only orders created for testing should be deleted.
            </summary>
            <param name="order">Order</param>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#delete-order"/>
        </member>
        <member name="M:commercetools.Orders.OrderManager.DeleteOrderAsync(System.String,System.Int32)">
            <summary>
            Removes an Order. Only orders created for testing should be deleted.
            </summary>
            <param name="orderId">Order ID</param>
            <param name="version">Order version</param>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#delete-order"/>
        </member>
        <member name="T:commercetools.Orders.Parcel">
            <summary>
            A parcel stores the information about the appearance and the movement of a parcel.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#parcel"/>
        </member>
        <member name="M:commercetools.Orders.Parcel.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Orders.Parcel.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Orders.Parcel.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Orders.ParcelMeasurements">
            <summary>
            Information regarding the dimensions of a parcel.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#parcelmeasurements"/>
        </member>
        <member name="M:commercetools.Orders.ParcelMeasurements.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Orders.ReturnItem">
            <summary>
            ReturnItem
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#returnitem"/>
        </member>
        <member name="M:commercetools.Orders.ReturnItem.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Orders.ReturnItem.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Orders.ReturnItem.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Orders.SyncInfo">
            <summary>
            Stores information about order synchronization activities (like export or import).
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#sync-info"/>
        </member>
        <member name="M:commercetools.Orders.SyncInfo.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Orders.TrackingData">
            <summary>
            Tracking data is usually some info about the delivery (like a DHL tracking number) which is useful to keep an eye on your delivery, view its status, etc.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-orders.html#trackingdata"/>
        </member>
        <member name="M:commercetools.Orders.TrackingData.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Payments.TransactionState">
            <summary>
            TransactionState
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#transaction-state"/>
        </member>
        <member name="T:commercetools.Payments.TransactionType">
            <summary>
            TransactionType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#transaction-type"/>
        </member>
        <member name="T:commercetools.Payments.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.Payments.Extensions.Payments(commercetools.Common.Client)">
            <summary>
            Creates an instance of the PaymentManager.
            </summary>
            <returns>PaymentManager</returns>
        </member>
        <member name="T:commercetools.Payments.Payment">
            <summary>
            Payments hold information about the current state of receiving and/or refunding money.
            </summary>
            <remarks>
            A payment represents one or a logically connected series of financial transactions like reserving money, charging money or refunding money. They serve as a representation of the current state of the payment and can also be used to trigger new transactions. The actual financial process is not done by the commercetools™ platform but usually by a PSP (Payment Service Provider), which is connected via PSP-specific integration implementation. The Payment representation does not contain payment method-specific fields. These are added as CustomFields via a payment method-specific payment type.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#payment"/>
        </member>
        <member name="M:commercetools.Payments.Payment.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Payments.Payment.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Payments.Payment.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Payments.PaymentDraft">
            <summary>
            PaymentDraft
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#paymentdraft"/>
        </member>
        <member name="M:commercetools.Payments.PaymentDraft.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Payments.PaymentManager">
             <summary>
            Provides access to the functions in the Payments section of the API.
             </summary>
             <see href="http://dev.commercetools.com/http-api-projects-payments.html"/>
        </member>
        <member name="M:commercetools.Payments.PaymentManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.Payments.PaymentManager.GetPaymentByIdAsync(System.String)">
            <summary>
            Gets an Payment by its ID.
            </summary>
            <param name="paymentId">Payment ID</param>
            <returns>Payment</returns>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#get-payment-by-id"/>
        </member>
        <member name="M:commercetools.Payments.PaymentManager.QueryPaymentsAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Queries for Payments.
            </summary>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <returns>PaymentQueryResult</returns>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#query-payments"/>
        </member>
        <member name="M:commercetools.Payments.PaymentManager.CreatePaymentAsync(commercetools.Payments.PaymentDraft)">
            <summary>
            To create a payment object a payment draft object has to be given
            with the request.
            </summary>
            <param name="draft">PaymentDraft</param>
            <returns>Payment</returns>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#create-a-payment"/>
        </member>
        <member name="M:commercetools.Payments.PaymentManager.UpdatePaymentAsync(commercetools.Payments.Payment,commercetools.Common.UpdateAction)">
            <summary>
            Updates a Payment.
            </summary>
            <param name="payment">Payment</param>
            <param name="action">The update action to be performed on the payment.</param>
            <returns>Payment</returns>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#update-payment"/>
        </member>
        <member name="M:commercetools.Payments.PaymentManager.UpdatePaymentAsync(commercetools.Payments.Payment,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a Payment.
            </summary>
            <param name="payment">Payment</param>
            <param name="actions">The list of update actions to be performed on the payment.</param>
            <returns>Payment</returns>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#update-payment"/>
        </member>
        <member name="M:commercetools.Payments.PaymentManager.UpdatePaymentAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a Payment.
            </summary>
            <param name="paymentId">ID of the payment</param>
            <param name="version">The expected version of the payment resource on which the changes should be applied.</param>
            <param name="actions">The list of update actions to be performed on the payment.</param>
            <returns>Payment</returns>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#update-payment"/>
        </member>
        <member name="M:commercetools.Payments.PaymentManager.DeletePaymentAsync(commercetools.Payments.Payment)">
            <summary>
            Removes a Payment.
            </summary>
            <param name="payment">Payment</param>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#delete-payment"/>
        </member>
        <member name="M:commercetools.Payments.PaymentManager.DeletePaymentAsync(System.String,System.Int32)">
            <summary>
            Removes a Payment.
            </summary>
            <param name="paymentId">Payment ID</param>
            <param name="version">Payment version</param>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#delete-payment"/>
        </member>
        <member name="T:commercetools.Payments.PaymentMethodInfo">
            <summary>
            PaymentMethodInfo
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#paymentMethodInfo"/>
        </member>
        <member name="M:commercetools.Payments.PaymentMethodInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Payments.PaymentMethodInfo.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Payments.PaymentQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of Payment objects.
            </summary>
            <see href="http://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="P:commercetools.Payments.PaymentQueryResult.Results">
            <summary>
            Results
            </summary>
        </member>
        <member name="M:commercetools.Payments.PaymentQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Payments.PaymentStatus">
            <summary>
            PaymentStatus
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#paymentstatus"/>
        </member>
        <member name="M:commercetools.Payments.PaymentStatus.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Payments.PaymentStatus.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Payments.Transaction">
            <summary>
            A representation of a financial transactions.
            </summary>
            <remarks>
            Transactions are either created by the solution implementation to trigger a new transaction at the PSP or created by the PSP integration as the result of a notification by the PSP.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#transaction"/>
        </member>
        <member name="M:commercetools.Payments.Transaction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Payments.Transaction.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Payments.Transaction.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Payments.Transaction.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Payments.TransactionDraft">
            <summary>
            TransactionDraft
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#transactiondraft"/>
        </member>
        <member name="M:commercetools.Payments.TransactionDraft.#ctor(commercetools.Payments.TransactionType,commercetools.Common.Money)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:commercetools.Payments.UpdateActions.ChangeAmountPlannedAction">
            <summary>
            Changes how much money this payment intends to receive from the customer.
            </summary>
            <remarks>
            The value usually matches the cart or order gross total. Updating the amountPlanned may be required after a customer changed the cart or added/removed a CartDiscount during the checkout.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#change-amountplanned"/>
        </member>
        <member name="P:commercetools.Payments.UpdateActions.ChangeAmountPlannedAction.Amount">
            <summary>
            The new amountPlanned
            </summary>
        </member>
        <member name="M:commercetools.Payments.UpdateActions.ChangeAmountPlannedAction.#ctor(commercetools.Common.Money)">
            <summary>
            Constructor.
            </summary>
            <param name="amount">The new amountPlanned</param>
        </member>
        <member name="T:commercetools.Payments.UpdateActions.SetAmountPaidAction">
            <summary>
            Sets the amount of money that has been paid by the customer.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#set-amountpaid"/>
        </member>
        <member name="P:commercetools.Payments.UpdateActions.SetAmountPaidAction.Amount">
            <summary>
            If not provided, the amount is unset.
            </summary>
        </member>
        <member name="M:commercetools.Payments.UpdateActions.SetAmountPaidAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Payments.UpdateActions.SetAmountRefundedAction">
            <summary>
            Sets the amount of money that has been refunded to the customer.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#set-amountrefunded"/>
        </member>
        <member name="P:commercetools.Payments.UpdateActions.SetAmountRefundedAction.Amount">
            <summary>
            If not provided, the amount is unset.
            </summary>
        </member>
        <member name="M:commercetools.Payments.UpdateActions.SetAmountRefundedAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Payments.UpdateActions.SetAuthorizationAction">
            <summary>
            Sets the amount of money that has been authorized and optionally until when the authorization is valid.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#set-authorization"/>
        </member>
        <member name="P:commercetools.Payments.UpdateActions.SetAuthorizationAction.Amount">
            <summary>
            If not provided the amount will be unset.
            </summary>
        </member>
        <member name="P:commercetools.Payments.UpdateActions.SetAuthorizationAction.Until">
            <summary>
            Cannot be set without setting amount, too. If not provided the until date will be unset.
            </summary>
        </member>
        <member name="M:commercetools.Payments.UpdateActions.SetAuthorizationAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Payments.UpdateActions.SetCustomerAction">
            <summary>
            Sets the reference to the customer. If not defined, the reference is unset.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#set-customer"/>
        </member>
        <member name="P:commercetools.Payments.UpdateActions.SetCustomerAction.Customer">
            <summary>
            A reference to the customer this payment belongs to.
            </summary>
        </member>
        <member name="M:commercetools.Payments.UpdateActions.SetCustomerAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Payments.UpdateActions.SetExternalIdAction">
            <summary>
            Sets a user-defined ID which can be used as additional identifier for external systems, like the systems involved in order or receivables management. 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#set-externalid"/>
        </member>
        <member name="P:commercetools.Payments.UpdateActions.SetExternalIdAction.ExternalId">
            <summary>
            External ID
            </summary>
        </member>
        <member name="M:commercetools.Payments.UpdateActions.SetExternalIdAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Payments.UpdateActions.SetInterfaceIdAction">
            <summary>
            Sets the identifier that is used by the interface that manages the payment (usually the PSP).
            </summary>
            <remarks>
            Cannot be changed once it has been set. The combination of interfaceId and PaymentMethodInfo paymentInterface must be unique.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#set-interfaceid"/>
        </member>
        <member name="P:commercetools.Payments.UpdateActions.SetInterfaceIdAction.InterfaceId">
            <summary>
            Interface ID
            </summary>
        </member>
        <member name="M:commercetools.Payments.UpdateActions.SetInterfaceIdAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="interfaceId">Interface ID</param>
        </member>
        <member name="T:commercetools.Payments.UpdateActions.SetMethodInfoInterfaceAction">
            <summary>
            Sets the interface that handles the payment (usually a PSP).
            </summary>
            <remarks>
            Cannot be changed once it has been set. The combination of Payment interfaceId and PaymentMethodInfo paymentInterface must be unique.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-payments.html#change-amountplanned"/>
        </member>
        <member name="P:commercetools.Payments.UpdateActions.SetMethodInfoInterfaceAction.Interface">
            <summary>
            Interface
            </summary>
        </member>
        <member name="M:commercetools.Payments.UpdateActions.SetMethodInfoInterfaceAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="methodInfoInterface">Interface</param>
        </member>
        <member name="T:commercetools.ProductProjectionSearch.FacetType">
            <summary>
            List of Facet types.
            </summary>
            <remarks>
            The actual value used for API requests is stored in the EnumMember attribute.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-products-search.html#facets"/>
        </member>
        <member name="T:commercetools.ProductProjectionSearch.FacetDataType">
            <summary>
            List of facet data types.
            </summary>
        </member>
        <member name="T:commercetools.ProductProjectionSearch.SortDirection">
            <summary>
            Sort direction.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-products-search.html#sorting"/>
        </member>
        <member name="T:commercetools.ProductProjectionSearch.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.ProductProjectionSearch.Extensions.ProductProjectionSearch(commercetools.Common.Client)">
            <summary>
            Creates an instance of the ProductProjectionSearchManager.
            </summary>
            <returns>ProductProjectionSearchManager</returns>
        </member>
        <member name="T:commercetools.ProductProjectionSearch.Facet">
            <summary>
            Facets calculate statistical counts to aid in faceted navigation.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-products-search.html#facets"/>
        </member>
        <member name="M:commercetools.ProductProjectionSearch.Facet.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ProductProjectionSearch.FacetFactory">
            <summary>
            FacetFactory
            </summary>
        </member>
        <member name="M:commercetools.ProductProjectionSearch.FacetFactory.Create(System.Object)">
            <summary>
            Creates a Facet using JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
            <returns>A object derived from Facet, or null</returns>
        </member>
        <member name="T:commercetools.ProductProjectionSearch.FacetTerm">
            <summary>
            FacetTerm
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-products-search.html#facetterm"/>
        </member>
        <member name="M:commercetools.ProductProjectionSearch.FacetTerm.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ProductProjectionSearch.FilterFacet">
            <summary>
            This facet type provides counts for specific values of ProductVariant fields.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-products-search.html#filter-type"/>
        </member>
        <member name="M:commercetools.ProductProjectionSearch.FilterFacet.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ProductProjectionSearch.ProductProjectionSearchManager">
            <summary>
            Provides access to the functions in the ProductProjectionSearch section of the API.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productProjections.html"/>
        </member>
        <member name="M:commercetools.ProductProjectionSearch.ProductProjectionSearchManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.ProductProjectionSearch.ProductProjectionSearchManager.SearchProductProjectionsAsync(System.String,System.String,System.Boolean,System.Int32,System.String[],System.String[],System.String[],System.String[],System.String,commercetools.ProductProjectionSearch.SortDirection,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            This endpoint provides high performance search queries over ProductProjections.
            </summary>
            <remarks>
            The query result contains the ProductProjections for which at least one ProductVariant matches the search query. This means that variants can be included in the result also for which the search query does not match. To determine which ProductVariants match the search query, the returned ProductProjections include the additional field isMatchingVariant.
            </remarks>
            <param name="text">The text to analyze and search for, e.g. as supplied by a user through a search input field.</param>
            <param name="language">The language for the text parameter in form of an IETF language tag.</param>
            <param name="fuzzy">Whether to apply fuzzy search on the text to analyze</param>
            <param name="fuzzyLevel">Provide explicitly the fuzzy level desired if fuzzy is enabled. This value can not be higher than the one chosen by the platform by default.</param>
            <param name="filter">List of filters</param>
            <param name="filterQuery">List of filters</param>
            <param name="filterFacets">List of filters</param>
            <param name="facet">List of facets</param>
            <param name="sort">Sort</param>
            <param name="sortDirection">Sort direction</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <param name="staged">Whether to search in the current or staged projections</param>
            <param name="priceCurrency">Enables price selection</param>
            <param name="priceCountry">Enables price selection. Can only be used in conjunction with the priceCurrency parameter</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter</param>
            <returns>ProductProjectionQueryResult object</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products-search.html#search-productprojections"/>
        </member>
        <member name="T:commercetools.ProductProjectionSearch.Range">
            <summary>
            Range facets provide statistical data over values for date, time, datetime, number and money type fields in a Facet range type.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-products-search.html#range"/>
        </member>
        <member name="M:commercetools.ProductProjectionSearch.Range.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ProductProjectionSearch.RangeFacet">
            <summary>
            The range facet type counts the ProductVariants for which the query value is in the Facet Query Parameter for Range type range specified in the query.
            </summary>
            <remarks>
            Range type facets are typically used to determine the minimum and maximum value for e.g. product prices to filter products by price with a range slider.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-products-search.html#range-type"/>
        </member>
        <member name="M:commercetools.ProductProjectionSearch.RangeFacet.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ProductProjectionSearch.TermFacet">
            <summary>
            The term type facets provide the counts for each of the different values the query parameter happens to have.
            </summary>
            <remarks>
            This is useful for, e.g., obtaining all possible values of a product attribute to provide filters for those values on the frontend.
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-products-search.html#term-type"/>
        </member>
        <member name="M:commercetools.ProductProjectionSearch.TermFacet.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ProductProjections.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.ProductProjections.Extensions.ProductProjections(commercetools.Common.Client)">
            <summary>
            Creates an instance of the ProductProjectionManager.
            </summary>
            <returns>ProductProjectionManager</returns>
        </member>
        <member name="T:commercetools.ProductProjections.ProductProjection">
            <summary>
            Product projection is a projected representation of a product that shows the product with its current or staged data.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productProjections.html#productprojection"/>
        </member>
        <member name="M:commercetools.ProductProjections.ProductProjection.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.ProductProjections.ProductProjection.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.ProductProjections.ProductProjection.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.ProductProjections.ProductProjectionManager">
            <summary>
            Provides access to the functions in the ProductProjections section of the API.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productProjections.html"/>
        </member>
        <member name="M:commercetools.ProductProjections.ProductProjectionManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.ProductProjections.ProductProjectionManager.GetProductProjectionByIdAsync(System.String,System.Boolean,System.String,System.String,System.Guid,System.Guid)">
            <summary>
            Gets the current or staged representation of a product in a catalog by ID.
            </summary>
            <param name="productId">Product ID</param>
            <param name="staged">Whether to query for the current or staged projections.</param>
            <param name="priceCurrency">The currency code compliant to ISO 4217. Enables price selection.</param>
            <param name="priceCountry">A two-digit country code as per ISO 3166-1 alpha-2. Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <returns>ProductProjection</returns>
            <see href="http://dev.commercetools.com/http-api-projects-productProjections.html#get-productprojection-by-id"/>
        </member>
        <member name="M:commercetools.ProductProjections.ProductProjectionManager.GetProductProjectionByKeyAsync(System.String,System.Boolean,System.String,System.String,System.Guid,System.Guid)">
            <summary>
            Gets the current or staged representation of a product found by Key.
            </summary>
            <param name="key">Product key</param>
            <param name="staged">Whether to query for the current or staged projections.</param>
            <param name="priceCurrency">The currency code compliant to ISO 4217. Enables price selection.</param>
            <param name="priceCountry">A two-digit country code as per ISO 3166-1 alpha-2. Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <returns>ProductProjection</returns>
            <see href="http://dev.commercetools.com/http-api-projects-productProjections.html#get-productprojection-by-key"/>
        </member>
        <member name="M:commercetools.ProductProjections.ProductProjectionManager.GetProductProjectionAsync(System.String,System.Boolean,System.String,System.String,System.Guid,System.Guid)">
            <summary>
            Private worker method for GetProductProjectionByIdAsync and GetProductProjectionByKeyAsync.
            </summary>
            <param name="endpoint">Request endpoint</param>
            <param name="staged">Whether to query for the current or staged projections.</param>
            <param name="priceCurrency">The currency code compliant to ISO 4217. Enables price selection.</param>
            <param name="priceCountry">A two-digit country code as per ISO 3166-1 alpha-2. Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-productProjections.html#get-productprojection"/>
        </member>
        <member name="M:commercetools.ProductProjections.ProductProjectionManager.QueryProductProjectionsAsync(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            You can use the product projections query endpoint to get the current or staged representations of Products.
            </summary>
            <remarks>
            We suggest to use the performance optimized search endpoint which has a bunch functionalities, the query API lacks, like sorting on custom attributes, etc.
            </remarks>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <param name="staged">Whether to query for the current or staged projections.</param>
            <param name="priceCurrency">The currency code compliant to ISO 4217. Enables price selection.</param>
            <param name="priceCountry">A two-digit country code as per ISO 3166-1 alpha-2. Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <returns>ProductProjectionQueryResult</returns>
            <see href="http://dev.commercetools.com/http-api-projects-productProjections.html#query-productprojections"/>
        </member>
        <member name="T:commercetools.ProductProjections.ProductProjectionQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of ProductProjection objects.
            </summary>
            <see href="http://dev.commercetools.com/http-api.html#paged-query-result"/>
        </member>
        <member name="M:commercetools.ProductProjections.ProductProjectionQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Products.CustomTokenizer">
            <summary>
            CustomTokenizer
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#suggesttokenizer"/>
        </member>
        <member name="M:commercetools.Products.CustomTokenizer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Products.CustomTokenizer.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:commercetools.Products.DiscountedPrice">
            <summary>
            DiscountedPrice
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#discountedprice"/>
        </member>
        <member name="M:commercetools.Products.DiscountedPrice.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Products.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.Products.Extensions.Products(commercetools.Common.Client)">
            <summary>
            Creates an instance of the ProductManager.
            </summary>
            <returns>ProductManager</returns>
        </member>
        <member name="T:commercetools.Products.PriceDraft">
            <summary>
            The representation to be sent to the server when creating a new price.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#pricedraft"/>
        </member>
        <member name="M:commercetools.Products.PriceDraft.#ctor(commercetools.Common.Money)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Products.ProductDraft">
            <summary>
            The representation to be sent to the server when creating a new product.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#productdraft"/>
        </member>
        <member name="M:commercetools.Products.ProductDraft.#ctor(commercetools.Common.LocalizedString,commercetools.Common.ResourceIdentifier,commercetools.Common.LocalizedString)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
            <param name="productType">Product type</param>
            <param name="slug">Slug</param>
        </member>
        <member name="T:commercetools.Products.ProductVariantDraft">
            <summary>
            The representation to be sent to the server when creating a new product variant.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#productvariantdraft"/>
        </member>
        <member name="M:commercetools.Products.ProductVariantDraft.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Products.ScopedPrice">
            <summary>
            Scoped price is returned as a part of a variant in product search (when price selector is used).
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#scopedprice"/>
        </member>
        <member name="M:commercetools.Products.ScopedPrice.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Products.ScopedPrice.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Products.ScopedPrice.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Products.SearchKeyword">
            <summary>
            SearchKeyword
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#searchkeyword"/>
        </member>
        <member name="M:commercetools.Products.SearchKeyword.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Products.SearchKeyword.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Products.SearchKeywords">
            <summary>
            SearchKeywords
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#searchkeywords"/>
        </member>
        <member name="M:commercetools.Products.SearchKeywords.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:commercetools.Products.SearchKeywords.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Products.SearchKeywords.SetValue(System.String,System.Collections.Generic.List{commercetools.Products.SearchKeyword})">
            <summary>
            Sets a value for a particular language.
            </summary>
            <remarks>If a previous value has been set for the language, it will be overwritten</remarks>
            <param name="language">Language</param>
            <param name="value">Value</param>
        </member>
        <member name="M:commercetools.Products.SearchKeywords.GetValue(System.String)">
            <summary>
            Gets the value for a language.
            </summary>
            <param name="language">Language</param>
            <returns>Value, or a null if not set</returns>
        </member>
        <member name="T:commercetools.Products.SuggestTokenizer">
            <summary>
            Base class for SuggestTokenizer types.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#suggesttokenizer"/>
        </member>
        <member name="M:commercetools.Products.SuggestTokenizer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Products.SuggestTokenizer.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:commercetools.Products.SuggestTokenizerFactory">
            <summary>
            SuggestTokenizerFactory
            </summary>
        </member>
        <member name="M:commercetools.Products.SuggestTokenizerFactory.Create(System.Object)">
            <summary>
            Creates a SuggestTokenizer using JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
            <returns>A object derived from SuggestTokenizer, or null</returns>
        </member>
        <member name="T:commercetools.Products.UpdateActions.AddAssetAction">
            <summary>
            Adds an Asset.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#add-asset"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddAssetAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddAssetAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddAssetAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddAssetAction.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.AddAssetAction.#ctor(commercetools.Common.AssetDraft,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="asset">Asset</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.AddExternalImageAction">
            <summary>
            Adds external image url with meta-information to the product variant.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#add-external-image"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddExternalImageAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddExternalImageAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddExternalImageAction.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddExternalImageAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="M:commercetools.Products.UpdateActions.AddExternalImageAction.#ctor(commercetools.Products.Image,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="image">Image</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.AddPriceAction">
            <summary>
            Adds the given price to the product variant's prices set.
            </summary>
            <remarks>
            Prices are defined with a scope (currency, country, CustomerGroup and channel) and/or a validity period (validFrom and/or validTo). A price without validity period (no validFrom and no validUntil) is always valid for its scope. 
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#add-price"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddPriceAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddPriceAction.Sku">
            <summary>
            SKU
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddPriceAction.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddPriceAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.AddPriceAction.#ctor(commercetools.Products.PriceDraft,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <remarks>
            Either variantId or sku must be specified.
            </remarks>
            <param name="price">Price</param>
            <param name="variantId">Product variant ID</param>
            <param name="sku">Product variant SKU</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.AddProductVariantAction">
            <summary>
            Adds a product variant.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#add-productvariant"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddProductVariantAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddProductVariantAction.Key">
            <summary>
            SKU
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddProductVariantAction.Prices">
            <summary>
            Prices
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddProductVariantAction.Images">
            <summary>
            Images
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddProductVariantAction.Attributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddProductVariantAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.AddProductVariantAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.AddToCategoryAction">
            <summary>
            Add to Category
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#add-to-category"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddToCategoryAction.Category">
            <summary>
            Reference to a Category 
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddToCategoryAction.OrderHint">
            <summary>
            String representing a number between 0 and 1
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.AddToCategoryAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="M:commercetools.Products.UpdateActions.AddToCategoryAction.#ctor(commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
            <param name="category">Reference to a Category</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.ChangeAssetNameAction">
            <summary>
            Change Asset Name
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#change-asset-name"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeAssetNameAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeAssetNameAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeAssetNameAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeAssetNameAction.AssetId">
            <summary>
            Asset ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeAssetNameAction.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.ChangeAssetNameAction.#ctor(System.String,commercetools.Common.LocalizedString,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="assetId">Asset ID</param>
            <param name="name">Name</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.ChangeAssetOrderAction">
            <summary>
            Changes the order of the assets array. 
            </summary>
            <remarks>
            The new order is defined by listing the ids of the assets.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#change-asset-order"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeAssetOrderAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeAssetOrderAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeAssetOrderAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeAssetOrderAction.AssetOrder">
            <summary>
            Must contain all asset ids.
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.ChangeAssetOrderAction.#ctor(System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="assetOrder">Must contain all asset ids.</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.ChangeMasterVariantAction">
            <summary>
            Sets the given variant as the new master variant. The previous master variant is added to the back of the list of variants.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#change-master-variant"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeMasterVariantAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeMasterVariantAction.Sku">
            <summary>
            Variant SKU
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeMasterVariantAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.ChangeMasterVariantAction.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <remarks>
            Either variantId or sku must be specified.
            </remarks>
            <param name="variantId">Product variant ID</param>
            <param name="sku">Product variant SKU</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.ChangeNameAction">
            <summary>
            Change name 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#change-name"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeNameAction.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeNameAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.ChangeNameAction.#ctor(commercetools.Common.LocalizedString)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.ChangePriceAction">
            <summary>
            Replaces a price in the product variant's prices set. The price to replace is specified by its ID.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#change-price"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangePriceAction.PriceId">
            <summary>
            Price ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangePriceAction.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangePriceAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.ChangePriceAction.#ctor(System.String,commercetools.Products.PriceDraft)">
            <summary>
            Constructor.
            </summary>
            <param name="priceId">Price ID</param>
            <param name="price">Price</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.ChangeSlugAction">
            <summary>
            Change slug
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#change-slug"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeSlugAction.Slug">
            <summary>
            Every slug must be unique across a project, but a product can have the same slug for different languages. Allowed are alphabetic, numeric, underscore (_) and hyphen (-) characters. Maximum size is 256.
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.ChangeSlugAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.ChangeSlugAction.#ctor(commercetools.Common.LocalizedString)">
            <summary>
            Constructor.
            </summary>
            <param name="slug">Slug</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.MoveImageToPositionAction">
            <summary>
            Moves an image to a new position within a product variant.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#move-image-to-position"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.MoveImageToPositionAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.MoveImageToPositionAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.MoveImageToPositionAction.ImageUrl">
            <summary>
            The URL of the image
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.MoveImageToPositionAction.Position">
            <summary>
            Position
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.MoveImageToPositionAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="M:commercetools.Products.UpdateActions.MoveImageToPositionAction.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="The URL of the imageURLoftheimage">Name</param>
            <param name="position">Position</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.PublishAction">
            <summary>
            Publishes a product, which causes the staged projection of the product to override the current projection.
            </summary>
            <remarks>
            If the product is published for the first time, the current projection is created.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#publish"/>
        </member>
        <member name="M:commercetools.Products.UpdateActions.PublishAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Products.UpdateActions.RemoveAssetAction">
            <summary>
            Removes an Asset.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#remove-asset"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveAssetAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveAssetAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveAssetAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveAssetAction.AssetId">
            <summary>
            Asset ID
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.RemoveAssetAction.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="assetId">Asset ID</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.RemoveFromCategoryAction">
            <summary>
            RemoveFromCategoryAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#remove-from-category"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveFromCategoryAction.Category">
            <summary>
            Reference to a Category 
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveFromCategoryAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.RemoveFromCategoryAction.#ctor(commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
            <param name="category">Reference to a Category</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.RemoveImageAction">
            <summary>
            Removes a product image and deletes it from the Content Delivery Network (it would not be deleted from the CDN in case of external image).
            </summary>
            <remarks>
            Deletion from the CDN is not instant, which means the image file itself will stay available for some time after the deletion.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#remove-image"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveImageAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveImageAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveImageAction.ImageUrl">
            <summary>
            The URL of the image
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveImageAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="M:commercetools.Products.UpdateActions.RemoveImageAction.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="imageUrl">The URL of the image</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.RemovePriceAction">
            <summary>
            Removes a price.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#remove-price"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemovePriceAction.PriceId">
            <summary>
            Price ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemovePriceAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.RemovePriceAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="priceId">Price ID</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.RemoveProductVariantAction">
            <summary>
            RemoveProductVariantAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#remove-productvariant"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveProductVariantAction.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveProductVariantAction.Sku">
            <summary>
            SKU
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.RemoveProductVariantAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.RemoveProductVariantAction.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <remarks>
            Either id or sku must be specified.
            </remarks>
            <param name="id">Product variant ID</param>
            <param name="sku">Product variant SKU</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.RevertStagedChangesAction">
            <summary>
            Revert all changes, which were made to the staged version of a product and reset to the current version.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#revert-staged-changes"/>
        </member>
        <member name="M:commercetools.Products.UpdateActions.RevertStagedChangesAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetAssetCustomFieldAction">
            <summary>
            This action sets, overwrites or removes any existing custom field for an existing Asset.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-asset-custom-field"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetCustomFieldAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetCustomFieldAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetCustomFieldAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetCustomFieldAction.AssetId">
            <summary>
            Asset ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetCustomFieldAction.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetCustomFieldAction.Value">
            <summary>
            Field value
            </summary>
            <remarks>
            If absent or null, this field is removed if it exists.
            </remarks>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetAssetCustomFieldAction.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="assetId">Asset ID</param>
            <param name="name">Name</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetAssetCustomTypeAction">
            <summary>
            This action sets, overwrites or removes the custom type and fields for an existing Asset.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-asset-custom-type"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetCustomTypeAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetCustomTypeAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetCustomTypeAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetCustomTypeAction.AssetId">
            <summary>
            Asset ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetCustomTypeAction.Type">
            <summary>
            ResourceIdentifier to a Type
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetCustomTypeAction.Fields">
            <summary>
            A valid JSON object, based on the FieldDefinitions of the Type 
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetAssetCustomTypeAction.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="assetId">Asset ID</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetAssetDescriptionAction">
            <summary>
            Set Asset Description
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-asset-description"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetDescriptionAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetDescriptionAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetDescriptionAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetDescriptionAction.AssetId">
            <summary>
            Asset ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetDescriptionAction.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetAssetDescriptionAction.#ctor(System.String,commercetools.Common.LocalizedString,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="assetId">Asset ID</param>
            <param name="description">Description</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetAssetSourcesAction">
            <summary>
            Set Asset Sources
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-asset-sources"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetSourcesAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetSourcesAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetSourcesAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetSourcesAction.AssetId">
            <summary>
            Asset ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetSourcesAction.Sources">
            <summary>
            List of AssetSource
            </summary>
            <remarks>
            Requires at least one entry
            </remarks>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetAssetSourcesAction.#ctor(System.String,System.Collections.Generic.List{commercetools.Common.AssetSource},System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="assetId">Asset ID</param>
            <param name="sources">List of AssetSource</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetAssetTagsAction">
            <summary>
            Set Asset Tags
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-asset-tags"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetTagsAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetTagsAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetTagsAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetTagsAction.AssetId">
            <summary>
            Asset ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAssetTagsAction.Tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetAssetTagsAction.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="assetId">Asset ID</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetAttributeInAllVariantsAction">
            <summary>
            Adds / Removes / Changes a custom attribute in all variants at the same time (it can be helpful to set attribute values that are constrained with SameForAll).
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-attribute-in-all-variants"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAttributeInAllVariantsAction.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAttributeInAllVariantsAction.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAttributeInAllVariantsAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetAttributeInAllVariantsAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetCategoryOrderHintAction">
            <summary>
            SetCategoryOrderHintAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-category-order-hint"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetCategoryOrderHintAction.CategoryId">
            <summary>
            Id of a Category the product belongs to
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetCategoryOrderHintAction.OrderHint">
            <summary>
            String representing a number between 0 and 1
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetCategoryOrderHintAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetCategoryOrderHintAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="categoryId">Id of a Category the product belongs to</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetDescriptionAction">
            <summary>
            SetDescriptionAction
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-description"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetDescriptionAction.Description">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetDescriptionAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetDescriptionAction.#ctor(commercetools.Common.LocalizedString)">
            <summary>
            Constructor.
            </summary>
            <param name="description">Description</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetDiscountedPriceAction">
            <summary>
            Discounts a product price. 
            </summary>
            <remarks>
            The referenced Product Discount in the discounted field must be active, valid, of type external and it’s predicate must match the referenced price.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-discounted-price"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetDiscountedPriceAction.PriceId">
            <summary>
            Price ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetDiscountedPriceAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetDiscountedPriceAction.Discounted">
            <summary>
            Discounted Price
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetDiscountedPriceAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="priceId">Price ID</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetKeyAction">
            <summary>
            Set key
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-key"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetKeyAction.Key">
            <summary>
            Product key
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetKeyAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetMetaDescriptionAction">
            <summary>
            Set Meta Description
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-meta-description"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetMetaDescriptionAction.MetaDescription">
            <summary>
            MetaDescription
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetMetaDescriptionAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetMetaKeywordsAction">
            <summary>
            Set Meta Keywords
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-meta-keywords"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetMetaKeywordsAction.MetaKeywords">
            <summary>
            MetaKeywords
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetMetaKeywordsAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetMetaTitleAction">
            <summary>
            Set Meta Title
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-meta-title"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetMetaTitleAction.MetaTitle">
            <summary>
            MetaTitle
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetMetaTitleAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetPricesAction">
            <summary>
            Sets the prices of a product variant.
            </summary>
            <remarks>
            The same validation rules as for addPrice apply. All previous price information is lost and even if some prices did not change, all the prices will have new ids.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-prices"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetPricesAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetPricesAction.Sku">
            <summary>
            SKU
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetPricesAction.Prices">
            <summary>
            Prices
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetPricesAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetPricesAction.#ctor(System.Collections.Generic.List{commercetools.Products.PriceDraft},System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <remarks>
            Either variantId or sku must be specified.
            </remarks>
            <param name="prices">Prices</param>
            <param name="variantId">Product variant ID</param>
            <param name="sku">Product variant SKU</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetProductPriceCustomFieldAction">
            <summary>
            This action sets, overwrites or removes any existing custom field for an existing product price.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-price-customfield"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetProductPriceCustomFieldAction.PriceId">
            <summary>
            Price ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetProductPriceCustomFieldAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetProductPriceCustomFieldAction.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetProductPriceCustomFieldAction.Value">
            <summary>
            Field value
            </summary>
            <remarks>
            If absent or null, this field is removed if it exists.
            </remarks>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetProductPriceCustomFieldAction.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="priceId">Price ID</param>
            <param name="name">Field name</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetProductPriceCustomTypeAction">
            <summary>
            This action sets, overwrites or removes any existing custom type and fields for an existing product price.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-price-custom-type"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetProductPriceCustomTypeAction.Type">
            <summary>
            ResourceIdentifier to a Type
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetProductPriceCustomTypeAction.PriceId">
            <summary>
            Price ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetProductPriceCustomTypeAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetProductPriceCustomTypeAction.Fields">
            <summary>
            A valid JSON object, based on the FieldDefinitions of the Type 
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetProductPriceCustomTypeAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="priceId">Price ID</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetAttributeAction">
            <summary>
            Adds/Removes/Changes a custom attribute.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-attribute"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAttributeAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAttributeAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAttributeAction.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAttributeAction.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetAttributeAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetAttributeAction.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetProductVariantKeyAction">
            <summary>
            Adds, changes or removes a key on a product variant.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-productvariant-key"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetProductVariantKeyAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetProductVariantKeyAction.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetProductVariantKeyAction.Key">
            <summary>
            Key
            </summary>
            <remarks>
            If left blank or set to null, the key is unset/removed.
            </remarks>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetProductVariantKeyAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetProductVariantKeyAction.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="variantId">Variant ID</param>
            <param name="sku">Sku</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetSearchKeywordsAction">
            <summary>
            Set SearchKeywords
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-searchkeywords"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetSearchKeywordsAction.SearchKeywords">
            <summary>
            SearchKeywords
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetSearchKeywordsAction.Staged">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetSearchKeywordsAction.#ctor(commercetools.Products.SearchKeywords)">
            <summary>
            Constructor.
            </summary>
            <param name="searchKeywords">SearchKeywords</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetSkuAction">
            <summary>
            Adds, changes or removes a SKU on a product variant.
            </summary>
            <remarks>
            A SKU can only be changed or removed from a variant through this operation if there is no inventory entry associated with that SKU.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-sku"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetSkuAction.VariantId">
            <summary>
            Variant ID
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetSkuAction.Sku">
            <summary>
            Sku
            </summary>
            <remarks>
            If left blank or set to null, the sku is unset/removed.
            </remarks>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetSkuAction.Staged">
            <summary>
            Staged
            </summary>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetSkuAction.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="variantId">Variant ID</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.SetTaxCategoryAction">
            <summary>
            Adds, changes or removes a product’s TaxCategory. 
            </summary>
            <remarks>
            This change can never be staged and is thus immediately visible in published products.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#set-taxcategory"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.SetTaxCategoryAction.TaxCategory">
            <summary>
            Reference to a TaxCategory 
            </summary>
            <remarks>
            If left blank or set to null, the tax category is unset/removed.
            </remarks>
        </member>
        <member name="M:commercetools.Products.UpdateActions.SetTaxCategoryAction.#ctor(commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Products.UpdateActions.TransitionStateAction">
            <summary>
            Transition to a new state.
            </summary>
            <remarks>
            If there is no state yet, the new state must be an initial state. If the existing state has transitions set, there must be a direct transition to the new state. If transitions is not set, no validation is performed. These validations can be turned off by setting the force parameter to true.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#transition-state"/>
        </member>
        <member name="P:commercetools.Products.UpdateActions.TransitionStateAction.State">
            <summary>
            Reference to a State 
            </summary>
        </member>
        <member name="P:commercetools.Products.UpdateActions.TransitionStateAction.Force">
            <summary>
            Staged
            </summary>
            <remarks>
            Defaults to false
            </remarks>
        </member>
        <member name="M:commercetools.Products.UpdateActions.TransitionStateAction.#ctor(commercetools.Common.Reference)">
            <summary>
            Constructor.
            </summary>
            <param name="state">Reference to a State</param>
        </member>
        <member name="T:commercetools.Products.UpdateActions.UnpublishAction">
            <summary>
            Unpublishes a product, effectively deleting the current projection of the product, leaving only the staged projection. 
            </summary>
            <remarks>
            Consequently, when a product is unpublished, it will no longer be included in query or search results issued with staged=false, since such results only include current projections.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#unpublish"/>
        </member>
        <member name="M:commercetools.Products.UpdateActions.UnpublishAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Products.WhitespaceTokenizer">
            <summary>
            WhitespaceTokenizer
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#suggesttokenizer"/>
        </member>
        <member name="M:commercetools.Products.WhitespaceTokenizer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Products.WhitespaceTokenizer.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:commercetools.Products.Attribute">
            <summary>
            Attribute
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#attribute"/>
        </member>
        <member name="M:commercetools.Products.Attribute.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Products.ProductQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of Product objects.
            </summary>
            <see href="http://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="P:commercetools.Products.ProductQueryResult.Results">
            <summary>
            Results
            </summary>
        </member>
        <member name="M:commercetools.Products.ProductQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Products.Image">
            <summary>
            Image
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#images"/>
        </member>
        <member name="M:commercetools.Products.Image.#ctor(System.Object)">
            <summary>
            Fills the object with data from an API response.
            </summary>
            <param name="data">API response</param>
        </member>
        <member name="M:commercetools.Products.Image.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Products.Image.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Products.Price">
            <summary>
            Price
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#price"/>
        </member>
        <member name="M:commercetools.Products.Price.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Products.Price.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Products.Price.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Products.Product">
            <summary>
            The full representation of a product combines the current and staged representations in a single representation.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#product"/>
        </member>
        <member name="M:commercetools.Products.Product.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Products.Product.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Products.Product.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Products.ProductCatalogData">
            <summary>
            ProductCatalogData
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#productcatalogdata"/>
        </member>
        <member name="M:commercetools.Products.ProductCatalogData.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Products.ProductData">
            <summary>
            ProductData
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#productdata"/>
        </member>
        <member name="M:commercetools.Products.ProductData.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Products.ProductManager">
            <summary>
            Provides access to the functions in the Products section of the API.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html"/>
        </member>
        <member name="M:commercetools.Products.ProductManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.Products.ProductManager.GetProductByIdAsync(System.String,System.String,System.String,System.Guid,System.Guid)">
            <summary>
            Gets the full representation of a product by ID.
            </summary>
            <param name="productId">Product ID</param>
            <param name="priceCurrency">The currency code compliant to ISO 4217. Enables price selection.</param>
            <param name="priceCountry">A two-digit country code as per ISO 3166-1 alpha-2. Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#get-product-by-id"/>
        </member>
        <member name="M:commercetools.Products.ProductManager.GetProductByKeyAsync(System.String,System.String,System.String,System.Guid,System.Guid)">
            <summary>
            Gets the full representation of a product by Key.
            </summary>
            <param name="key">Product key</param>
            <param name="priceCurrency">The currency code compliant to ISO 4217. Enables price selection.</param>
            <param name="priceCountry">A two-digit country code as per ISO 3166-1 alpha-2. Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#get-product-by-key"/>
        </member>
        <member name="M:commercetools.Products.ProductManager.GetProductAsync(System.String,System.String,System.String,System.Guid,System.Guid)">
            <summary>
            Private worker method for GetProductByIdAsync and GetProductByKeyAsync.
            </summary>
            <param name="endpoint">Request endpoint</param>
            <param name="priceCurrency">The currency code compliant to ISO 4217. Enables price selection.</param>
            <param name="priceCountry">A two-digit country code as per ISO 3166-1 alpha-2. Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#get-product"/>
        </member>
        <member name="M:commercetools.Products.ProductManager.QueryProductsAsync(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Queries for Products.
            </summary>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <param name="priceCurrency">Enables price selection</param>
            <param name="priceCountry">Enables price selection. Can only be used in conjunction with the priceCurrency parameter</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter</param>
            <returns>ProductQueryResult</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#products-by-query"/>
        </member>
        <member name="M:commercetools.Products.ProductManager.CreateProductAsync(commercetools.Products.ProductDraft)">
            <summary>
            Creates a new Product.
            </summary>
            <param name="productDraft">ProductDraft</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#create-product"/>
        </member>
        <member name="M:commercetools.Products.ProductManager.UpdateProductAsync(commercetools.Products.Product,commercetools.Common.UpdateAction,System.String,System.String,System.Guid,System.Guid)">
            <summary>
            (Partial) updates are made to an existing product by sending a list of actions to be applied. The actions are applied in the given order. If price selection query parameters are provided, the selected prices will be added to the response.
            </summary>
            <param name="product">Product</param>
            <param name="action">The update action to apply to the product.</param>
            <param name="priceCurrency">The currency code compliant to ISO 4217. Enables price selection.</param>
            <param name="priceCountry">A two-digit country code as per ISO 3166-1 alpha-2. Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#update-product"/>
        </member>
        <member name="M:commercetools.Products.ProductManager.UpdateProductAsync(commercetools.Products.Product,System.Collections.Generic.List{commercetools.Common.UpdateAction},System.String,System.String,System.Guid,System.Guid)">
            <summary>
            (Partial) updates are made to an existing product by sending a list of actions to be applied. The actions are applied in the given order. If price selection query parameters are provided, the selected prices will be added to the response.
            </summary>
            <param name="product">Product</param>
            <param name="actions">The list of update actions to apply to the product.</param>
            <param name="priceCurrency">The currency code compliant to ISO 4217. Enables price selection.</param>
            <param name="priceCountry">A two-digit country code as per ISO 3166-1 alpha-2. Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#update-product"/>
        </member>
        <member name="M:commercetools.Products.ProductManager.UpdateProductByIdAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction},System.String,System.String,System.Guid,System.Guid)">
            <summary>
            (Partial) updates are made to an existing product by sending a list of actions to be applied. The actions are applied in the given order. If price selection query parameters are provided, the selected prices will be added to the response.
            </summary>
            <param name="productId">ID of the product</param>
            <param name="version">The expected version of the product on which the changes should be applied.</param>
            <param name="actions">The list of update actions to apply to the product.</param>
            <param name="priceCurrency">The currency code compliant to ISO 4217. Enables price selection.</param>
            <param name="priceCountry">A two-digit country code as per ISO 3166-1 alpha-2. Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#update-product"/>
        </member>
        <member name="M:commercetools.Products.ProductManager.UpdateProductByKeyAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction},System.String,System.String,System.Guid,System.Guid)">
            <summary>
            Update a product found by its Key.
            </summary>
            <param name="key">Product key</param>
            <param name="version">The expected version of the product on which the changes should be applied.</param>
            <param name="actions">The list of update actions to apply to the product.</param>
            <param name="priceCurrency">The currency code compliant to ISO 4217. Enables price selection.</param>
            <param name="priceCountry">A two-digit country code as per ISO 3166-1 alpha-2. Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#update-product"/>
        </member>
        <member name="M:commercetools.Products.ProductManager.UpdateProductAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction},System.String,System.String,System.Guid,System.Guid)">
            <summary>
            Private worker method for UpdateProductByIdAsync and UpdateProductByKeyAsync.
            </summary>
            <param name="endpoint">Request endpoint</param>
            <param name="version">The expected version of the product on which the changes should be applied.</param>
            <param name="actions">The list of update actions to apply to the product.</param>
            <param name="priceCurrency">The currency code compliant to ISO 4217. Enables price selection.</param>
            <param name="priceCountry">A two-digit country code as per ISO 3166-1 alpha-2. Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceCustomerGroup">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <param name="priceChannel">Enables price selection. Can only be used in conjunction with the priceCurrency parameter.</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#update-product"/>
        </member>
        <member name="M:commercetools.Products.ProductManager.DeleteProductAsync(commercetools.Products.Product)">
            <summary>
            Deletes a Product.
            </summary>
            <param name="product">Product</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#delete-product"/>
        </member>
        <member name="M:commercetools.Products.ProductManager.DeleteProductAsync(System.String,System.Int32)">
            <summary>
            Deletes a Product.
            </summary>
            <param name="productId">Product ID</param>
            <param name="version">Product version</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#delete-product"/>
        </member>
        <member name="T:commercetools.Products.ProductVariant">
            <summary>
            ProductVariant
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#productvariant"/>
        </member>
        <member name="P:commercetools.Products.ProductVariant.Id">
            <summary>
            The sequential ID of the variant within the product.
            </summary>
        </member>
        <member name="P:commercetools.Products.ProductVariant.Sku">
            <summary>
            The SKU of the variant.
            </summary>
        </member>
        <member name="P:commercetools.Products.ProductVariant.Key">
            <summary>
            User-specific unique identifier for the variant.
            </summary>
            <remarks>
            Product variant keys are different from product keys.
            </remarks>
        </member>
        <member name="P:commercetools.Products.ProductVariant.Prices">
            <summary>
            The prices of the variant. 
            </summary>
            <remarks>
            The prices does not contain two prices for the same price scope (same currency, country, customer group and channel).
            </remarks>
        </member>
        <member name="P:commercetools.Products.ProductVariant.Attributes">
            <summary>
            List of Attributes
            </summary>
        </member>
        <member name="P:commercetools.Products.ProductVariant.Price">
            <summary>
            Only appears when price selection is used. 
            </summary>
            <remarks>
            This field cannot be used in a query predicate.
            </remarks>
        </member>
        <member name="P:commercetools.Products.ProductVariant.Images">
            <summary>
            List of Images
            </summary>
        </member>
        <member name="P:commercetools.Products.ProductVariant.Assets">
            <summary>
            List of Assets
            </summary>
        </member>
        <member name="P:commercetools.Products.ProductVariant.Availability">
            <summary>
            The availability is set if the variant is tracked by the inventory.
            </summary>
            <remarks>
            The field might not contain the latest inventory state (it is eventually consistent) and can be used as an optimization to reduce calls to the inventory service.
            </remarks>
        </member>
        <member name="P:commercetools.Products.ProductVariant.IsMatchingVariant">
            <summary>
            Only appears in response to a Product Projection Search request to mark this variant as one that matches the search query.
            </summary>
        </member>
        <member name="P:commercetools.Products.ProductVariant.ScopedPrice">
            <summary>
            Only appears when price selection is used.
            </summary>
        </member>
        <member name="P:commercetools.Products.ProductVariant.ScopedPriceDiscounted">
            <summary>
            Only appears in response to a Product Projection Search request when price selection is used.
            </summary>
        </member>
        <member name="M:commercetools.Products.ProductVariant.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Products.ProductVariant.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Products.ProductVariant.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Products.ProductVariantAvailability">
            <summary>
            ProductVariantAvailability
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-products.html#productvariantavailability"/>
        </member>
        <member name="M:commercetools.Products.ProductVariantAvailability.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ProductTypes.AttributeDefinition">
            <summary>
            Attribute definitions describe a product attribute and allow you to define some meta-information associated with the attribute (like whether it should be searchable or its constraints).
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#attributedefinition"/>
        </member>
        <member name="M:commercetools.ProductTypes.AttributeDefinition.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ProductTypes.AttributeDefinitionDraft">
            <summary>
            The representation to be sent to the server when creating a new AttributeDefinition.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#attributedefinitiondraft"/>
        </member>
        <member name="P:commercetools.ProductTypes.AttributeDefinitionDraft.Type">
            <summary>
            Describes the type of the attribute.
            </summary>
        </member>
        <member name="P:commercetools.ProductTypes.AttributeDefinitionDraft.Name">
            <summary>
            The unique name of the attribute used in the API. 
            </summary>
            <remarks>
            The name must be between two and 36 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (_) and the hyphen-minus (-). It is allowed to have attributes with the same name in two or more ProductTypes. The important constraint is: all fields of the AttributeDefinition need to be the same across all attributes with the same name.
            </remarks>
        </member>
        <member name="P:commercetools.ProductTypes.AttributeDefinitionDraft.Label">
            <summary>
            A human-readable label for the attribute.
            </summary>
        </member>
        <member name="P:commercetools.ProductTypes.AttributeDefinitionDraft.IsRequired">
            <summary>
            Whether the attribute is required to have a value.
            </summary>
        </member>
        <member name="P:commercetools.ProductTypes.AttributeDefinitionDraft.AttributeConstraint">
            <summary>
            Describes how an attribute or a set of attributes should be validated across all variants of a product.
            </summary>
        </member>
        <member name="P:commercetools.ProductTypes.AttributeDefinitionDraft.InputTip">
            <summary>
            Additional information about the attribute that aids content managers when setting product details.
            </summary>
        </member>
        <member name="P:commercetools.ProductTypes.AttributeDefinitionDraft.InputHint">
            <summary>
            Provides a visual representation type for this attribute.
            </summary>
            <remarks>
            Only relevant for text-based attribute types like TextType and LocalizableTextType.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:commercetools.ProductTypes.AttributeDefinitionDraft.IsSearchable" -->
        <member name="M:commercetools.ProductTypes.AttributeDefinitionDraft.#ctor(commercetools.ProductTypes.AttributeType,System.String,commercetools.Common.LocalizedString,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="type">Describes the type of the attribute.</param>
            <param name="name">The unique name of the attribute used in the API.</param>
            <param name="label">A human-readable label for the attribute.</param>
            <param name="isRequired">Whether the attribute is required to have a value.</param>
        </member>
        <member name="T:commercetools.ProductTypes.AttributeConstraint">
            <summary>
            AttributeConstraint enum tells how an attribute or a set of attributes should be validated across all variants of a product.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#attributeconstraint-enum"/>
        </member>
        <member name="T:commercetools.ProductTypes.TextInputHint">
            <summary>
            TextInputHint enumeration.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#textinputhint"/>
        </member>
        <member name="T:commercetools.ProductTypes.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.Extensions.ProductTypes(commercetools.Common.Client)">
            <summary>
            Creates an instance of the ProductTypeManager.
            </summary>
            <returns>ProductTypeManager</returns>
        </member>
        <member name="T:commercetools.ProductTypes.AttributeTypeFactory">
            <summary>
            AttributeTypeFactory
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.AttributeTypeFactory.Create(System.Object)">
            <summary>
            Creates an AttributeType using JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
            <returns>A object derived from AttributeType, or null</returns>
        </member>
        <member name="T:commercetools.ProductTypes.ProductType">
            <summary>
            Product types are used to describe common characteristics, most importantly common custom attributes, of many concrete products.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#producttype"/>
        </member>
        <member name="M:commercetools.ProductTypes.ProductType.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.ProductTypes.ProductType.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.ProductTypes.ProductType.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.ProductTypes.ProductTypeDraft">
            <summary>
            The representation to be sent to the server when creating a new ProductType.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#producttypedraft"/>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeDraft.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Name</param>
            <param name="description">Description</param>
        </member>
        <member name="T:commercetools.ProductTypes.ProductTypeManager">
            <summary>
            Provides access to the functions in the ProductTypes section of the API.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html"/>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeManager.GetProductTypeByIdAsync(System.String)">
            <summary>
            Gets a ProductType by its ID.
            </summary>
            <param name="productTypeId">Product type ID</param>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#get-a-producttype-by-id"/>
            <returns>ProductType</returns>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeManager.GetProductTypeByKeyAsync(System.String)">
            <summary>
            Gets a ProductType by its key.
            </summary>
            <param name="key">Key</param>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#get-a-producttype-by-key"/>
            <returns>ProductType</returns>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeManager.QueryProductTypesAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Queries for ProductTypes.
            </summary>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <returns>ProductTypeQueryResult</returns>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#query-producttypes"/>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeManager.CreateProductTypeAsync(commercetools.ProductTypes.ProductTypeDraft)">
            <summary>
            Creates a new ProductType.
            </summary>
            <param name="productTypeDraft">ProductTypeDraft</param>
            <returns>ProductType</returns>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#create-a-producttype"/>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeManager.UpdateProductTypeAsync(commercetools.ProductTypes.ProductType,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a product type.
            </summary>
            <param name="productType">Product type</param>
            <param name="actions">The list of update actions to apply to the product type.</param>
            <returns>ProductType</returns>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeManager.UpdateProductTypeByIdAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a product type by ID.
            </summary>
            <param name="productTypeId">ID of the product type</param>
            <param name="version">The expected version of the product type on which the changes should be applied.</param>
            <param name="actions">The list of update actions to apply to the product type.</param>
            <returns>ProductType</returns>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#update-producttype-by-id"/>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeManager.UpdateProductTypeByKeyAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Update a product type found by its Key.
            </summary>
            <param name="key">Product type key</param>
            <param name="version">The expected version of the product type on which the changes should be applied.</param>
            <param name="actions">The list of update actions to apply to the product type.</param>
            <returns>ProductType</returns>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#update-producttype-by-key"/>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeManager.UpdateProductTypeAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Private worker method for UpdateProductTypeByIdAsync and UpdateProductTypeByKeyAsync.
            </summary>
            <param name="endpoint">Request endpoint</param>
            <param name="version">The expected version of the product type on which the changes should be applied.</param>
            <param name="actions">The list of update actions to apply to the product type.</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#update-producttype"/>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeManager.DeleteProductTypeAsync(commercetools.ProductTypes.ProductType)">
            <summary>
            Deletes a ProductType.
            </summary>
            <param name="productType">ProductType</param>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeManager.DeleteProductTypeByIdAsync(System.String,System.Int32)">
            <summary>
            Deletes a ProductType by its ID.
            </summary>
            <param name="productTypeId">ProductType ID</param>
            <param name="version">ProductType version</param>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#delete-producttype"/>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeManager.DeleteProductTypeByKeyAsync(System.String,System.Int32)">
            <summary>
            Deletes a ProductType by its key.
            </summary>
            <param name="key">Key</param>
            <param name="version">ProductType version</param>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#delete-producttype-by-key"/>
        </member>
        <member name="T:commercetools.ProductTypes.ProductTypeQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of ProductType objects.
            </summary>
            <see href="http://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="P:commercetools.ProductTypes.ProductTypeQueryResult.Results">
            <summary>
            Results
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.ProductTypeQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ProductTypes.SetType">
            <summary>
            SetType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#settype"/>
        </member>
        <member name="M:commercetools.ProductTypes.SetType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.SetType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.ProductTypes.AttributeType">
            <summary>
            All attribute types have a name. Some have additional fields such as values in enums or elementType in sets.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#attributetype"/>
        </member>
        <member name="M:commercetools.ProductTypes.AttributeType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.AttributeType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.ProductTypes.BooleanType">
            <summary>
            BooleanType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#booleantype"/>
        </member>
        <member name="M:commercetools.ProductTypes.BooleanType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.BooleanType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.ProductTypes.DateTimeType">
            <summary>
            DateTimeType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#datetimetype"/>
        </member>
        <member name="M:commercetools.ProductTypes.DateTimeType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.DateTimeType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.ProductTypes.DateType">
            <summary>
            DateType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#datetype"/>
        </member>
        <member name="M:commercetools.ProductTypes.DateType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.DateType.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:commercetools.ProductTypes.EnumType">
            <summary>
            EnumType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#enumtype"/>
        </member>
        <member name="M:commercetools.ProductTypes.EnumType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.EnumType.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:commercetools.ProductTypes.LocalizableEnumType">
            <summary>
            LocalizableEnumType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#localizableenumtype"/>
        </member>
        <member name="M:commercetools.ProductTypes.LocalizableEnumType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.LocalizableEnumType.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:commercetools.ProductTypes.LocalizableTextType">
            <summary>
            LocalizableTextType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#localizabletexttype"/>
        </member>
        <member name="M:commercetools.ProductTypes.LocalizableTextType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.LocalizableTextType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.ProductTypes.MoneyType">
            <summary>
            MoneyType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#moneytype"/>
        </member>
        <member name="M:commercetools.ProductTypes.MoneyType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.MoneyType.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:commercetools.ProductTypes.NestedType">
            <summary>
            NestedType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#nestedtype"/>
        </member>
        <member name="M:commercetools.ProductTypes.NestedType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.NestedType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.ProductTypes.NumberType">
            <summary>
            NumberType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#numbertype"/>
        </member>
        <member name="M:commercetools.ProductTypes.NumberType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.NumberType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.ProductTypes.ReferenceType">
            <summary>
            ReferenceType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#referencetype"/>
        </member>
        <member name="M:commercetools.ProductTypes.ReferenceType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.ReferenceType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.ProductTypes.TextType">
            <summary>
            TextType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#texttype"/>
        </member>
        <member name="M:commercetools.ProductTypes.TextType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.TextType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.ProductTypes.TimeType">
            <summary>
            TimeType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-productTypes.html#timetype"/>
        </member>
        <member name="M:commercetools.ProductTypes.TimeType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ProductTypes.TimeType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.CustomFields.Custom">
            <summary>
            Custom
            </summary>
            <remarks>
            The CustomFields property maps to the 'custom' field in the API. It could not be named Custom as that is the name of the class.
            </remarks>
            <see href="http://dev.commercetools.com/http-api-projects-custom-fields.html#custom"/>
        </member>
        <member name="P:commercetools.CustomFields.Custom.CustomFields">
            <summary>
            Custom
            </summary>
        </member>
        <member name="M:commercetools.CustomFields.Custom.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.CustomFields.CustomFields">
            <summary>
            CustomFields
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-custom-fields.html#customfields"/>
        </member>
        <member name="M:commercetools.CustomFields.CustomFields.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.CustomFields.CustomFieldsDraft">
            <summary>
            The representation to be sent to the server when creating a resource with custom fields.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-custom-fields.html#customfieldsdraft"/>
        </member>
        <member name="M:commercetools.CustomFields.CustomFieldsDraft.#ctor(commercetools.Common.ResourceIdentifier)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Project.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.Project.Extensions.Project(commercetools.Common.Client)">
            <summary>
            Creates an instance of the ProjectManager.
            </summary>
            <returns>ProjectManager</returns>
        </member>
        <member name="T:commercetools.Project.Project">
            <summary>
            Project
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-project.html#project-1"/>
        </member>
        <member name="M:commercetools.Project.Project.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Project.Project.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Project.Project.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Project.ProjectManager">
            <summary>
            Provides access to the functions in the Project section of the API.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-project.html"/>    
        </member>
        <member name="M:commercetools.Project.ProjectManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor.
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.Project.ProjectManager.GetProjectAsync">
            <summary>
            ets the current project.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-project.html#get-project"/>
            <returns>Project</returns>
        </member>
        <member name="T:commercetools.Reviews.Review">
            <summary>
            Reviews are used to evaluate products and channels.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-reviews.html#review"/>
        </member>
        <member name="M:commercetools.Reviews.Review.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Reviews.Review.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Reviews.Review.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Reviews.ReviewRatingStatistics">
            <summary>
            ReviewRatingStatistics
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-reviews.html#reviewratingstatistics"/>
        </member>
        <member name="M:commercetools.Reviews.ReviewRatingStatistics.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Reviews.ReviewRatingStatistics.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ShippingMethods.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.ShippingMethods.Extensions.ShippingMethods(commercetools.Common.Client)">
            <summary>
            Creates an instance of the ShippingMethodManager.
            </summary>
            <returns>ShippingMethodManager</returns>
        </member>
        <member name="T:commercetools.ShippingMethods.ShippingMethod">
            <summary>
            A shipping method defines a specific way of shipping, with different rates for different geographic locations.
            </summary>
            <remarks>
            Example shipping methods are "DHL", "DHL Express" and "UPS".
            </remarks>
            <see href="https://dev.commercetools.com/http-api-projects-shippingMethods.html#shippingmethod"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethod.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ShippingMethods.ShippingMethodDraft">
            <summary>
            The representation to be sent to the server when creating a new shipping method.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-shippingMethods.html#shippingmethoddraft"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethodDraft.#ctor(System.String,commercetools.Common.Reference,System.Collections.Generic.List{commercetools.ShippingMethods.ZoneRate})">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
            <param name="taxCategory">Tax category</param>
            <param name="zoneRates">Zone rates</param>
        </member>
        <member name="T:commercetools.ShippingMethods.ShippingMethodManager">
            <summary>
            Provides access to the functions in the ShippingMethods section of the API.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-shippingMethods.html"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethodManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethodManager.GetShippingMethodByIdAsync(System.String)">
            <summary>
            Gets a ShippingMethod by its ID.
            </summary>
            <param name="shippingMethodId">ShippingMethod ID</param>
            <returns>ShippingMethod</returns>
            <see href="https://dev.commercetools.com/http-api-projects-shippingMethods.html#get-shippingmethod-by-id"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethodManager.QueryShippingMethodsAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Queries for ShippingMethods.
            </summary>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <returns>ShippingMethodQueryResult</returns>
            <see href="https://dev.commercetools.com/http-api-projects-shippingMethods.html#query-shippingmethods"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethodManager.GetShippingMethodsForCart(System.String)">
            <summary>
            Retrieves all the shipping methods that can ship to the shipping address of the given cart.
            </summary>
            <param name="cartId">The ID of the cart with a shipping address set.</param>
            <returns>List of ShippingMethod objects</returns>
            <see href="https://dev.commercetools.com/http-api-projects-shippingMethods.html#get-shippingmethods-for-a-cart"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethodManager.GetShippingMethodsForLocation(System.String,System.String,System.String)">
            <summary>
            Retrieves all the shipping methods that can ship to the given Location.
            </summary>
            <remarks>
            If the currency parameter is given, then the shipping methods must also have a rate defined in the specified currency.
            </remarks>
            <param name="country">A two-digit country code as per ISO 3166-1 alpha-2.</param>
            <param name="state">State</param>
            <param name="currency">The currency code compliant to ISO 4217.</param>
            <returns>List of ShippingMethod objects</returns>
            <see href="https://dev.commercetools.com/http-api-projects-shippingMethods.html#get-shippingmethods-for-a-location"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethodManager.CreateShippingMethodAsync(commercetools.ShippingMethods.ShippingMethodDraft)">
            <summary>
            Creates a new Shipping Method.
            </summary>
            <param name="shippingMethodDraft">ShippingMethodDraft</param>
            <returns>ShippingMethod</returns>
            <see href="http://dev.commercetools.com/http-api-projects-shippingMethods.html#create-shippingmethod"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethodManager.UpdateShippingMethodAsync(commercetools.ShippingMethods.ShippingMethod,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a shipping method.
            </summary>
            <param name="shippingMethod">Shipping method</param>
            <param name="actions">The list of update actions to apply to the product.</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-shippingMethods.html#update-shippingmethod"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethodManager.UpdateShippingMethodAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a shipping method.
            </summary>
            <param name="shippingMethodId">ID of the shipping method</param>
            <param name="version">The expected version of the product on which the changes should be applied.</param>
            <param name="actions">The list of update actions to apply to the product.</param>
            <returns>Product</returns>
            <see href="http://dev.commercetools.com/http-api-projects-shippingMethods.html#update-shippingmethod"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethodManager.DeleteShippingMethodAsync(commercetools.ShippingMethods.ShippingMethod)">
            <summary>
            Removes a shipping method.
            </summary>
            <param name="shippingMethod">Shipping method</param>
            <returns>ShippingMethod</returns>
            <see href="http://dev.commercetools.com/http-api-projects-shippingMethods.html#delete-shippingmethod"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethodManager.DeleteShippingMethodAsync(System.String,System.Int32)">
            <summary>
            Removes a shipping method.
            </summary>
            <param name="shippingMethodId">Shipping method ID</param>
            <param name="version">Shipping method version</param>
            <returns>ShippingMethod</returns>
            <see href="http://dev.commercetools.com/http-api-projects-shippingMethods.html#delete-shippingmethod"/>
        </member>
        <member name="T:commercetools.ShippingMethods.ShippingMethodQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of ShippingMethod objects.
            </summary>
            <see href="http://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="P:commercetools.ShippingMethods.ShippingMethodQueryResult.Results">
            <summary>
            Results
            </summary>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingMethodQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ShippingMethods.ShippingRate">
            <summary>
            ShippingRate
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-shippingMethods.html#shippingrate"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingRate.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ShippingMethods.ShippingRate.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.ShippingMethods.ZoneRate">
            <summary>
            Defines shipping rates (prices) for a specific zone. Shipping rates is an array because the rates for different currencies can be defined.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-shippingMethods.html#zonerate"/>
        </member>
        <member name="M:commercetools.ShippingMethods.ZoneRate.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.ShippingMethods.ZoneRate.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.States.StateRole">
            <summary>
            StateRole enumeration.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-states.html#staterole"/>
        </member>
        <member name="T:commercetools.States.StateType">
            <summary>
            StateType enumeration.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-states.html#statetype"/>
        </member>
        <member name="T:commercetools.States.State">
            <summary>
            A State represents a state of a particular entity (defines a finite state machine).
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-states.html#state"/>
        </member>
        <member name="M:commercetools.States.State.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.TaxCategories.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.TaxCategories.Extensions.TaxCategories(commercetools.Common.Client)">
            <summary>
            Creates an instance of the TaxCategoryManager.
            </summary>
            <returns>TaxCategoryManager</returns>
        </member>
        <member name="T:commercetools.TaxCategories.SubRate">
            <summary>
            A SubRate is used to calculate the taxPortions field in a cart or order. It is useful if the total tax of a country is a combination of multiple taxes (e.g. state and local taxes).
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-taxCategories.html#subrate"/>
        </member>
        <member name="M:commercetools.TaxCategories.SubRate.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.TaxCategories.SubRate.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.TaxCategories.TaxCategory">
            <summary>
            TaxCategory
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html#taxcategory"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategory.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategory.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategory.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.TaxCategories.TaxCategoryDraft">
            <summary>
            API representation for creating a new tax category.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html#taxcategorydraft"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategoryDraft.#ctor(System.String,System.Collections.Generic.List{commercetools.TaxCategories.TaxRateDraft})">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
            <param name="rates">Rates</param>
        </member>
        <member name="T:commercetools.TaxCategories.TaxCategoryManager">
            <summary>
            Provides access to the functions in the TaxCategories section of the API. 
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategoryManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategoryManager.GetTaxCategoryByIdAsync(System.String)">
            <summary>
            Gets a TaxCategory by its ID.
            </summary>
            <param name="taxCategoryId">TaxCategory ID</param>
            <returns>TaxCategory</returns>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html#get-taxcategory-by-id"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategoryManager.QueryTaxCategoriesAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Queries for TaxCategories.
            </summary>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <returns>TaxCategoryQueryResult</returns>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html#query-taxcategories"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategoryManager.CreateTaxCategoryAsync(commercetools.TaxCategories.TaxCategoryDraft)">
            <summary>
            Creates a new tax category.
            </summary>
            <param name="taxCategoryDraft">TaxCategoryDraft</param>
            <returns>TaxCategory</returns>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html#create-taxcategory"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategoryManager.UpdateTaxCategoryAsync(commercetools.TaxCategories.TaxCategory,commercetools.Common.UpdateAction)">
            <summary>
            Updates a tax category.
            </summary>
            <param name="taxCategory">Tax category</param>
            <param name="action">The update action to be performed on the tax category.</param>
            <returns>TaxCategory</returns>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html#update-taxcategory"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategoryManager.UpdateTaxCategoryAsync(commercetools.TaxCategories.TaxCategory,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a tax category.
            </summary>
            <param name="taxCategory">Tax category</param>
            <param name="actions">The list of update actions to be performed on the tax category.</param>
            <returns>TaxCategory</returns>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html#update-taxcategory"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategoryManager.UpdateTaxCategoryAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a tax category.
            </summary>
            <param name="taxCategoryId">ID of the tax category</param>
            <param name="version">The expected version of the tax category on which the changes should be applied.</param>
            <param name="actions">The list of update actions to be performed on the tax category.</param>
            <returns>TaxCategory</returns>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html#update-taxcategory"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategoryManager.DeleteTaxCategoryAsync(commercetools.TaxCategories.TaxCategory)">
            <summary>
            Removes a tax category.
            </summary>
            <param name="taxCategory">Tax category</param>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html#delete-taxcategory"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategoryManager.DeleteTaxCategoryAsync(System.String,System.Int32)">
            <summary>
            Removes a tax category.
            </summary>
            <param name="taxCategoryId">Tax category ID</param>
            <param name="version">Tax category version</param>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html#delete-taxcategory"/>
        </member>
        <member name="T:commercetools.TaxCategories.TaxCategoryQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of TaxCategory objects.
            </summary>
            <see href="http://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxCategoryQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.TaxCategories.TaxRate">
            <summary>
            TaxRate
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html#taxrate"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxRate.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.TaxCategories.TaxRate.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.TaxCategories.TaxRate.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.TaxCategories.TaxRateDraft">
            <summary>
            API representation for creating a new tax rate.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-taxCategories.html#taxratedraft"/>
        </member>
        <member name="M:commercetools.TaxCategories.TaxRateDraft.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
            <param name="includedInPrice">Included in price</param>
            <param name="country">A two-digit country code as per ISO 3166-1 alpha-2.</param>
        </member>
        <member name="T:commercetools.Types.BooleanType">
            <summary>
            BooleanType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#booleantype"/>
        </member>
        <member name="M:commercetools.Types.BooleanType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.BooleanType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.Types.Extensions.Types(commercetools.Common.Client)">
            <summary>
            Creates an instance of the TypeManager.
            </summary>
            <returns>TypeManager</returns>
        </member>
        <member name="T:commercetools.Types.TypeManager">
            <summary>
            Provides access to the functions in the Types section of the API. 
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-types.html"/>
        </member>
        <member name="M:commercetools.Types.TypeManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.Types.TypeManager.GetTypeByIdAsync(System.String)">
            <summary>
            Gets a Type by its ID.
            </summary>
            <param name="typeId">Type ID</param>
            <returns>Type</returns>
            <see href="https://dev.commercetools.com/http-api-projects-types.html#get-type-by-id"/>
        </member>
        <member name="M:commercetools.Types.TypeManager.QueryTypesAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Queries for Types.
            </summary>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <returns>TypeQueryResult</returns>
            <see href="https://dev.commercetools.com/http-api-projects-types.html#get-type-by-id"/>
        </member>
        <member name="M:commercetools.Types.TypeManager.CreateTypeAsync(commercetools.Types.TypeDraft)">
            <summary>
            Creates a new type.
            </summary>
            <param name="typeDraft">Type Draft</param>
            <returns>Type</returns>
            <see href="https://dev.commercetools.com/http-api-projects-types.html#create-type"/>
        </member>
        <member name="M:commercetools.Types.TypeManager.UpdateTypeAsync(commercetools.Types.Type,commercetools.Common.UpdateAction)">
            <summary>
            Updates a type.
            </summary>
            <param name="type">Type</param>
            <param name="action">The update action to be performed on the type.</param>
            <returns>Type</returns>
        </member>
        <member name="M:commercetools.Types.TypeManager.UpdateTypeAsync(commercetools.Types.Type,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a type.
            </summary>
            <param name="type">Type</param>
            <param name="action">The update action to be performed on the type.</param>
            <returns>Type</returns>
        </member>
        <member name="M:commercetools.Types.TypeManager.UpdateTypeByIdAsync(System.String,System.Int32,commercetools.Common.UpdateAction)">
            <summary>
            Updates a type.
            </summary>
            <param name="typeId">Type ID</param>
            <param name="version">The expected version of the type on which the changes should be applied.</param>
            <param name="action">The update action to be performed on the type.</param>
            <returns>Type</returns>
            <see href="https://dev.commercetools.com/http-api-projects-types.html#update-type-by-id"/>
        </member>
        <member name="M:commercetools.Types.TypeManager.UpdateTypeByIdAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a type.
            </summary>
            <param name="typeId">Type ID</param>
            <param name="version">The expected version of the type on which the changes should be applied.</param>
            <param name="actions">The list of update actions to be performed on the type.</param>
            <returns>Type</returns>
            <see href="https://dev.commercetools.com/http-api-projects-types.html#update-type-by-id"/>
        </member>
        <member name="M:commercetools.Types.TypeManager.UpdateTypeByKeyAsync(System.String,System.Int32,commercetools.Common.UpdateAction)">
            <summary>
            Updates a type.
            </summary>
            <param name="key">Type key</param>
            <param name="version">The expected version of the type on which the changes should be applied.</param>
            <param name="action">The update action to be performed on the type.</param>
            <returns>Type</returns>
            <see href="https://dev.commercetools.com/http-api-projects-types.html#update-type-by-id"/>
        </member>
        <member name="M:commercetools.Types.TypeManager.UpdateTypeByKeyAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a type.
            </summary>
            <param name="key">Type key</param>
            <param name="version">The expected version of the type on which the changes should be applied.</param>
            <param name="actions">The list of update actions to be performed on the type.</param>
            <returns>Type</returns>
            <see href="https://dev.commercetools.com/http-api-projects-types.html#update-type-by-id"/>
        </member>
        <member name="M:commercetools.Types.TypeManager.UpdateTypeAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Private worker method for UpdateProductByIdAsync and UpdateProductByKeyAsync.
            </summary>
            <param name="endpoint">Request endpoint</param>
            <param name="version">The expected version of the type on which the changes should be applied.</param>
            <param name="actions">The list of update actions to apply to the type.</param>
            <returns>Type</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:commercetools.Types.TypeManager.DeleteTypeAsync(commercetools.Types.Type)" -->
        <member name="M:commercetools.Types.TypeManager.DeleteTypeByIdAsync(System.String,System.Int32)">
            <summary>
            Deletes a type.
            </summary>
            <param name="typeId">Type ID</param>
            <param name="version">Type version</param>
            <returns>JObject</returns>
            <see href="https://dev.commercetools.com/http-api-projects-types.html#delete-type-by-id"/>
        </member>
        <member name="M:commercetools.Types.TypeManager.DeleteTypeByKeyAsync(System.String,System.Int32)">
            <summary>
            Deletes a type.
            </summary>
            <param name="typeId">Type ID</param>
            <param name="version">Type version</param>
            <returns>JObject</returns>
            <see href="https://dev.commercetools.com/http-api-projects-types.html#delete-type-by-key"/>
        </member>
        <member name="M:commercetools.Types.TypeManager.DeleteTypeAsync(System.String,System.Int32)">
            <summary>
            Private worker method for DeleteTypeByIdAsync and DeleteTypeByKeyAsync.
            </summary>
            <param name="endpoint">Request endpoint</param>
            <param name="version">Type version</param>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.TypeQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of Type objects.
            </summary>
            <see href="https://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="P:commercetools.Types.TypeQueryResult.Results">
            <summary>
            Results
            </summary>
        </member>
        <member name="M:commercetools.Types.TypeQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Types.DateTimeType">
            <summary>
            DateTimeType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#datetimetype"/>
        </member>
        <member name="M:commercetools.Types.DateTimeType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.DateTimeType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.DateType">
            <summary>
            DateType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#datetype"/>
        </member>
        <member name="M:commercetools.Types.DateType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.DateType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.TextInputHint">
            <summary>
            Provides a visual representation type for this field. It is only relevant for string-based field types like StringType and LocalizedStringType.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#textinputhint"/>
        </member>
        <member name="T:commercetools.Types.EnumType">
            <summary>
            EnumType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#enumtype"/>
        </member>
        <member name="M:commercetools.Types.EnumType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.EnumType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.EnumValue">
            <summary>
            EnumValue
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#enumvalue"/>
        </member>
        <member name="M:commercetools.Types.EnumValue.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.EnumValue.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.FieldDefinition">
            <summary>
            Field definitions describe custom fields and allow you to define some meta-information associated with the field.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-types.html#fielddefinition"/>
        </member>
        <member name="M:commercetools.Types.FieldDefinition.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.FieldDefinition.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Types.FieldType">
            <summary>
            All field types have a name. Some have additional fields such as values in enums or elementType in sets.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#fieldtype"/>
        </member>
        <member name="M:commercetools.Types.FieldType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.FieldType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.FieldTypeFactory">
            <summary>
            FieldTypeFactory
            </summary>
        </member>
        <member name="M:commercetools.Types.FieldTypeFactory.Create(System.Object)">
            <summary>
            Creates an FieldType using JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
            <returns>A object derived from FieldType, or null</returns>
        </member>
        <member name="T:commercetools.Types.LocalizedEnumType">
            <summary>
            LocalizedEnumType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#localizedenumtype"/>
        </member>
        <member name="M:commercetools.Types.LocalizedEnumType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.LocalizedEnumType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.LocalizedEnumValue">
            <summary>
            LocalizedEnumValue
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#localizedenumvalue"/>
        </member>
        <member name="M:commercetools.Types.LocalizedEnumValue.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.LocalizedEnumValue.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.MoneyType">
            <summary>
            MoneyType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#moneytype"/>
        </member>
        <member name="M:commercetools.Types.MoneyType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.MoneyType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.NumberType">
            <summary>
            NumberType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#numbertype"/>
        </member>
        <member name="M:commercetools.Types.NumberType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.NumberType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.ReferenceType">
            <summary>
            ReferenceType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#referencetype"/>
        </member>
        <member name="M:commercetools.Types.ReferenceType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.ReferenceType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.LocalizedStringType">
            <summary>
            LocalizedStringType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#localizedstringtype"/>
        </member>
        <member name="M:commercetools.Types.LocalizedStringType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.LocalizedStringType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.SetType">
            <summary>
            SetType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#settype"/>
        </member>
        <member name="M:commercetools.Types.SetType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.SetType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.StringType">
            <summary>
            StringType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#stringtype"/>
        </member>
        <member name="M:commercetools.Types.StringType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.StringType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.TimeType">
            <summary>
            TimeType
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-types.html#timetype"/>
        </member>
        <member name="M:commercetools.Types.TimeType.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Types.TimeType.#ctor(System.Object)">
            <summary>
            Returns a JSON representation of this instance.
            </summary>
            <returns>JObject</returns>
        </member>
        <member name="T:commercetools.Types.Type">
            <summary>
            Type
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-types.html#type"/>
        </member>
        <member name="M:commercetools.Types.Type.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="M:commercetools.Types.Type.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:commercetools.Types.Type.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:commercetools.Types.TypeDraft">
            <summary>
            TypeDrafts are given as payload for Create Type requests.
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-types.html#typedraft"/>
        </member>
        <member name="M:commercetools.Types.TypeDraft.#ctor(System.String,commercetools.Common.LocalizedString,System.Collections.Generic.List{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="currency">Currency</param>
        </member>
        <member name="T:commercetools.Zones.Extensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:commercetools.Zones.Extensions.Zones(commercetools.Common.Client)">
            <summary>
            Creates an instance of the ZoneManager.
            </summary>
            <returns>ZoneManager</returns>
        </member>
        <member name="T:commercetools.Zones.Location">
            <summary>
            A geographical location representing a country with an optional state.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-zones.html#location"/>
        </member>
        <member name="M:commercetools.Zones.Location.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:commercetools.Zones.Location.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Zones.UpdateActions.AddLocationAction">
            <summary>
            AddLocationAction
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-zones.html#add-location"/>
        </member>
        <member name="P:commercetools.Zones.UpdateActions.AddLocationAction.Location">
            <summary>
            Location
            </summary>
        </member>
        <member name="M:commercetools.Zones.UpdateActions.AddLocationAction.#ctor(commercetools.Zones.Location)">
            <summary>
            Constructor.
            </summary>
            <param name="location">Location</param>
        </member>
        <member name="T:commercetools.Zones.UpdateActions.ChangeNameAction">
            <summary>
            ChangeNameAction
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-zones.html#change-name"/>
        </member>
        <member name="P:commercetools.Zones.UpdateActions.ChangeNameAction.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="M:commercetools.Zones.UpdateActions.ChangeNameAction.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="T:commercetools.Zones.UpdateActions.RemoveLocationAction">
            <summary>
            RemoveLocationAction
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-zones.html#remove-location"/>
        </member>
        <member name="P:commercetools.Zones.UpdateActions.RemoveLocationAction.Location">
            <summary>
            Location
            </summary>
        </member>
        <member name="M:commercetools.Zones.UpdateActions.RemoveLocationAction.#ctor(commercetools.Zones.Location)">
            <summary>
            Constructor.
            </summary>
            <param name="location">Location</param>
        </member>
        <member name="T:commercetools.Zones.UpdateActions.SetDescriptionAction">
            <summary>
            SetDescriptionAction
            </summary>
            <see href="https://dev.commercetools.com/http-api-projects-zones.html#set-description"/>
        </member>
        <member name="P:commercetools.Zones.UpdateActions.SetDescriptionAction.Deescription">
            <summary>
            Deescription
            </summary>
        </member>
        <member name="M:commercetools.Zones.UpdateActions.SetDescriptionAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:commercetools.Zones.Zone">
            <summary>
            Groups locations to a zone. A zone is used to define a ShippingRate for a set of locations.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-zones.html#zone"/>
        </member>
        <member name="M:commercetools.Zones.Zone.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
        <member name="T:commercetools.Zones.ZoneDraft">
            <summary>
            The representation to be sent to the server when creating a new zone.
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-zones.html#zonedraft"/>
        </member>
        <member name="M:commercetools.Zones.ZoneDraft.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="T:commercetools.Zones.ZoneManager">
            <summary>
            Provides access to the functions in the Zones section of the API. 
            </summary>
            <see href="http://dev.commercetools.com/http-api-projects-zones.html"/>
        </member>
        <member name="M:commercetools.Zones.ZoneManager.#ctor(commercetools.Common.Client)">
            <summary>
            Constructor
            </summary>
            <param name="client">Client</param>
        </member>
        <member name="M:commercetools.Zones.ZoneManager.GetZoneByIdAsync(System.String)">
            <summary>
            Gets a Zone by its ID.
            </summary>
            <param name="zoneId">Zone ID</param>
            <returns>Zone</returns>
            <see href="http://dev.commercetools.com/http-api-projects-zones.html#get-zone-by-id"/>
        </member>
        <member name="M:commercetools.Zones.ZoneManager.QueryZonesAsync(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Queries for Zones.
            </summary>
            <param name="where">Where</param>
            <param name="sort">Sort</param>
            <param name="limit">Limit</param>
            <param name="offset">Offset</param>
            <returns>ZoneQueryResult</returns>
            <see href="http://dev.commercetools.com/http-api-projects-zones.html#query-zones"/>
        </member>
        <member name="M:commercetools.Zones.ZoneManager.CreateZoneAsync(commercetools.Zones.ZoneDraft)">
            <summary>
            Creates a new zone.
            </summary>
            <param name="zoneDraft">Zone Draft</param>
            <returns>Zone</returns>
            <see href="http://dev.commercetools.com/http-api-projects-zones.html#create-zone"/>
        </member>
        <member name="M:commercetools.Zones.ZoneManager.UpdateZoneAsync(commercetools.Zones.Zone,commercetools.Common.UpdateAction)">
            <summary>
            Updates a zone.
            </summary>
            <param name="zone">Zone</param>
            <param name="action">The update action to be performed on the zone.</param>
            <returns>Zone</returns>
            <see href="http://dev.commercetools.com/http-api-projects-zones.html#update-zone"/>
        </member>
        <member name="M:commercetools.Zones.ZoneManager.UpdateZoneAsync(commercetools.Zones.Zone,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a zone.
            </summary>
            <param name="zone">Zone</param>
            <param name="actions">The list of update actions to be performed on the zone.</param>
            <returns>Zone</returns>
            <see href="http://dev.commercetools.com/http-api-projects-zones.html#update-zone"/>
        </member>
        <member name="M:commercetools.Zones.ZoneManager.UpdateZoneAsync(System.String,System.Int32,System.Collections.Generic.List{commercetools.Common.UpdateAction})">
            <summary>
            Updates a zone.
            </summary>
            <param name="zoneId">ID of the zone</param>
            <param name="version">The expected version of the zone on which the changes should be applied.</param>
            <param name="actions">The list of update actions to be performed on the zone.</param>
            <returns>Zone</returns>
            <see href="http://dev.commercetools.com/http-api-projects-zones.html#update-zone"/>
        </member>
        <member name="M:commercetools.Zones.ZoneManager.DeleteZoneAsync(commercetools.Zones.Zone)">
            <summary>
            Deletes a zone.
            </summary>
            <param name="zone">Zone</param>
            <see href="http://dev.commercetools.com/http-api-projects-zones.html#delete-zone"/>
        </member>
        <member name="M:commercetools.Zones.ZoneManager.DeleteZoneAsync(System.String,System.Int32)">
            <summary>
            Deletes a zone.
            </summary>
            <param name="zoneId">Zone ID</param>
            <param name="version">Zone version</param>
            <see href="http://dev.commercetools.com/http-api-projects-zones.html#delete-zone"/>
        </member>
        <member name="T:commercetools.Zones.ZoneQueryResult">
            <summary>
            An implementation of PagedQueryResult that provides access to the results as a List of Zone objects.
            </summary>
            <see href="http://dev.commercetools.com/http-api.html#pagedqueryresult"/>
        </member>
        <member name="P:commercetools.Zones.ZoneQueryResult.Results">
            <summary>
            Results
            </summary>
        </member>
        <member name="M:commercetools.Zones.ZoneQueryResult.#ctor(System.Object)">
            <summary>
            Initializes this instance with JSON data from an API response.
            </summary>
            <param name="data">JSON object</param>
        </member>
    </members>
</doc>
